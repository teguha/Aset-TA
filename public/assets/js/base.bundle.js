/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/src/js/base.js":
/*!*****************************************!*\
  !*** ./resources/assets/src/js/base.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

  eval("window.BaseApp = __webpack_require__(/*! ./base/BaseApp.js */ \"./resources/assets/src/js/base/BaseApp.js\");\nwindow.BaseUtil = __webpack_require__(/*! ./base/BaseUtil.js */ \"./resources/assets/src/js/base/BaseUtil.js\");\nwindow.BasePlugin = __webpack_require__(/*! ./base/BasePlugin.js */ \"./resources/assets/src/js/base/BasePlugin.js\");\nwindow.BaseContent = __webpack_require__(/*! ./base/BaseContent.js */ \"./resources/assets/src/js/base/BaseContent.js\");\nwindow.BaseModal = __webpack_require__(/*! ./base/BaseModal.js */ \"./resources/assets/src/js/base/BaseModal.js\");\nwindow.BaseList = __webpack_require__(/*! ./base/BaseList.js */ \"./resources/assets/src/js/base/BaseList.js\");\nwindow.BaseForm = __webpack_require__(/*! ./base/BaseForm.js */ \"./resources/assets/src/js/base/BaseForm.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLG1CQUFPLENBQUMsb0VBQUQsQ0FBeEI7QUFDQUYsTUFBTSxDQUFDRyxRQUFQLEdBQWtCRCxtQkFBTyxDQUFDLHNFQUFELENBQXpCO0FBQ0FGLE1BQU0sQ0FBQ0ksVUFBUCxHQUFvQkYsbUJBQU8sQ0FBQywwRUFBRCxDQUEzQjtBQUNBRixNQUFNLENBQUNLLFdBQVAsR0FBcUJILG1CQUFPLENBQUMsNEVBQUQsQ0FBNUI7QUFDQUYsTUFBTSxDQUFDTSxTQUFQLEdBQW1CSixtQkFBTyxDQUFDLHdFQUFELENBQTFCO0FBQ0FGLE1BQU0sQ0FBQ08sUUFBUCxHQUFrQkwsbUJBQU8sQ0FBQyxzRUFBRCxDQUF6QjtBQUNBRixNQUFNLENBQUNRLFFBQVAsR0FBa0JOLG1CQUFPLENBQUMsc0VBQUQsQ0FBekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlLmpzPzYzY2EiXSwic291cmNlc0NvbnRlbnQiOlsid2luZG93LkJhc2VBcHAgPSByZXF1aXJlKCcuL2Jhc2UvQmFzZUFwcC5qcycpO1xud2luZG93LkJhc2VVdGlsID0gcmVxdWlyZSgnLi9iYXNlL0Jhc2VVdGlsLmpzJyk7XG53aW5kb3cuQmFzZVBsdWdpbiA9IHJlcXVpcmUoJy4vYmFzZS9CYXNlUGx1Z2luLmpzJyk7XG53aW5kb3cuQmFzZUNvbnRlbnQgPSByZXF1aXJlKCcuL2Jhc2UvQmFzZUNvbnRlbnQuanMnKTtcbndpbmRvdy5CYXNlTW9kYWwgPSByZXF1aXJlKCcuL2Jhc2UvQmFzZU1vZGFsLmpzJyk7XG53aW5kb3cuQmFzZUxpc3QgPSByZXF1aXJlKCcuL2Jhc2UvQmFzZUxpc3QuanMnKTtcbndpbmRvdy5CYXNlRm9ybSA9IHJlcXVpcmUoJy4vYmFzZS9CYXNlRm9ybS5qcycpOyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJCYXNlQXBwIiwicmVxdWlyZSIsIkJhc2VVdGlsIiwiQmFzZVBsdWdpbiIsIkJhc2VDb250ZW50IiwiQmFzZU1vZGFsIiwiQmFzZUxpc3QiLCJCYXNlRm9ybSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base.js\n");

  /***/ }),

  /***/ "./resources/assets/src/js/base/BaseApp.js":
  /*!*************************************************!*\
    !*** ./resources/assets/src/js/base/BaseApp.js ***!
    \*************************************************/
  /***/ ((module) => {

  eval("var BaseApp = function () {\n  return {\n    init: function init() {\n      BaseUtil.init();\n      BaseList.init();\n      BasePlugin.init();\n      BaseContent.init();\n    },\n    documentEvent: function documentEvent() {\n      BaseUtil.documentEvent();\n      BaseContent.documentEvent();\n      BaseModal.documentEvent();\n      BaseForm.documentEvent();\n      BaseList.documentEvent();\n    },\n    lang: function lang(key) {\n      var lang = BaseAppLang;\n      var keys = key.split('.');\n      $.each(keys, function (i, val) {\n        lang = lang[val];\n      });\n      return lang;\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseApp;\n}\n\n$(function () {\n  BaseApp.init();\n  BaseApp.documentEvent();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlL0Jhc2VBcHAuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBTUEsT0FBTyxHQUFHLFlBQVk7RUFDeEIsT0FBTztJQUNIQyxJQUFJLEVBQUUsZ0JBQVk7TUFDZEMsUUFBUSxDQUFDRCxJQUFUO01BQ0FFLFFBQVEsQ0FBQ0YsSUFBVDtNQUNBRyxVQUFVLENBQUNILElBQVg7TUFDQUksV0FBVyxDQUFDSixJQUFaO0lBQ0gsQ0FORTtJQU9ISyxhQUFhLEVBQUUseUJBQVk7TUFDdkJKLFFBQVEsQ0FBQ0ksYUFBVDtNQUNBRCxXQUFXLENBQUNDLGFBQVo7TUFDQUMsU0FBUyxDQUFDRCxhQUFWO01BQ0FFLFFBQVEsQ0FBQ0YsYUFBVDtNQUNBSCxRQUFRLENBQUNHLGFBQVQ7SUFDSCxDQWJFO0lBY0hHLElBQUksRUFBRSxjQUFTQyxHQUFULEVBQWM7TUFDaEIsSUFBSUQsSUFBSSxHQUFHRSxXQUFYO01BQ0EsSUFBSUMsSUFBSSxHQUFHRixHQUFHLENBQUNHLEtBQUosQ0FBVSxHQUFWLENBQVg7TUFDQUMsQ0FBQyxDQUFDQyxJQUFGLENBQU9ILElBQVAsRUFBYSxVQUFVSSxDQUFWLEVBQWFDLEdBQWIsRUFBa0I7UUFDM0JSLElBQUksR0FBR0EsSUFBSSxDQUFDUSxHQUFELENBQVg7TUFDSCxDQUZEO01BR0EsT0FBT1IsSUFBUDtJQUNIO0VBckJFLENBQVA7QUF1QkgsQ0F4QmUsRUFBaEIsQyxDQTBCQTs7O0FBQ0EsSUFBSSxTQUFpQyxPQUFPUyxNQUFNLENBQUNDLE9BQWQsS0FBMEIsV0FBL0QsRUFBNEU7RUFDeEVELE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLE9BQWpCO0FBQ0g7O0FBRURjLENBQUMsQ0FBQyxZQUFZO0VBQ1ZkLE9BQU8sQ0FBQ0MsSUFBUjtFQUNBRCxPQUFPLENBQUNNLGFBQVI7QUFDSCxDQUhBLENBQUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlL0Jhc2VBcHAuanM/MzE5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBCYXNlQXBwID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIEJhc2VVdGlsLmluaXQoKTtcbiAgICAgICAgICAgIEJhc2VMaXN0LmluaXQoKTtcbiAgICAgICAgICAgIEJhc2VQbHVnaW4uaW5pdCgpO1xuICAgICAgICAgICAgQmFzZUNvbnRlbnQuaW5pdCgpO1xuICAgICAgICB9LFxuICAgICAgICBkb2N1bWVudEV2ZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBCYXNlVXRpbC5kb2N1bWVudEV2ZW50KCk7XG4gICAgICAgICAgICBCYXNlQ29udGVudC5kb2N1bWVudEV2ZW50KCk7XG4gICAgICAgICAgICBCYXNlTW9kYWwuZG9jdW1lbnRFdmVudCgpO1xuICAgICAgICAgICAgQmFzZUZvcm0uZG9jdW1lbnRFdmVudCgpO1xuICAgICAgICAgICAgQmFzZUxpc3QuZG9jdW1lbnRFdmVudCgpO1xuICAgICAgICB9LFxuICAgICAgICBsYW5nOiBmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgICAgIHZhciBsYW5nID0gQmFzZUFwcExhbmc7XG4gICAgICAgICAgICB2YXIga2V5cyA9IGtleS5zcGxpdCgnLicpO1xuICAgICAgICAgICAgJC5lYWNoKGtleXMsIGZ1bmN0aW9uIChpLCB2YWwpIHtcbiAgICAgICAgICAgICAgICBsYW5nID0gbGFuZ1t2YWxdO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gbGFuZztcbiAgICAgICAgfVxuICAgIH1cbn0oKTtcblxuLy8gd2VicGFjayBzdXBwb3J0XG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzICE9PSAndW5kZWZpbmVkJykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gQmFzZUFwcDtcbn1cblxuJChmdW5jdGlvbiAoKSB7XG4gICAgQmFzZUFwcC5pbml0KCk7XG4gICAgQmFzZUFwcC5kb2N1bWVudEV2ZW50KCk7XG59KTtcbiJdLCJuYW1lcyI6WyJCYXNlQXBwIiwiaW5pdCIsIkJhc2VVdGlsIiwiQmFzZUxpc3QiLCJCYXNlUGx1Z2luIiwiQmFzZUNvbnRlbnQiLCJkb2N1bWVudEV2ZW50IiwiQmFzZU1vZGFsIiwiQmFzZUZvcm0iLCJsYW5nIiwia2V5IiwiQmFzZUFwcExhbmciLCJrZXlzIiwic3BsaXQiLCIkIiwiZWFjaCIsImkiLCJ2YWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseApp.js\n");

  /***/ }),

  /***/ "./resources/assets/src/js/base/BaseContent.js":
  /*!*****************************************************!*\
    !*** ./resources/assets/src/js/base/BaseContent.js ***!
    \*****************************************************/
  /***/ ((module) => {

  eval("/*\n * BASE CONTENT\n */\nvar BaseContent = function () {\n  return {\n    init: function init() {\n      this.handlePushStyles();\n    },\n    replace: function replace(element) {\n      var _el$attr;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var el = $(element);\n      var url = (_el$attr = el.attr('href')) !== null && _el$attr !== void 0 ? _el$attr : el.data('url');\n      BaseContent.replaceByUrl(url, options);\n    },\n    replaceByUrl: function replaceByUrl(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.url = url;\n      var useReplace = $('meta[name=\"replace\"]').attr('content');\n\n      if (useReplace) {\n        var contentLoading = setTimeout(function () {\n          BaseContent.loader(true, false);\n        }, 500);\n        $.ajax({\n          url: url,\n          dataType: 'html',\n          headers: {\n            'Base-Replace-Content': true\n          },\n          beforeSend: function beforeSend() {\n            BaseContent.clearBody();\n          },\n          success: function success(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.handleContentPageState(resp, options);\n            BaseContent.handlePushStyles();\n            BaseContent.loader(false);\n          },\n          error: function error() {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n            BaseUtil.redirect(url.replace(location.origin, ''));\n          }\n        });\n      } else {\n        var _window$RemoveCacheTi;\n\n        BaseContent.loader(true, false);\n        setTimeout(function () {\n          BaseUtil.redirect(url.replace(location.origin, ''));\n        }, (_window$RemoveCacheTi = window.RemoveCacheTime) !== null && _window$RemoveCacheTi !== void 0 ? _window$RemoveCacheTi : 0);\n      }\n    },\n    clearBody: function clearBody() {\n      $('body>:not(.no-body-clear,#gritter-notice-wrapper,.swal-overlay,.phpdebugbar,.phpdebugbar-openhandler,.phpdebugbar-openhandler-overlay)').remove();\n    },\n    loader: function loader() {\n      var loading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var fullbackdrop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var body = $('body');\n\n      if (loading === true) {\n        if (!body.hasClass('content-loading')) {\n          body.addClass('content-loading');\n\n          if (fullbackdrop === true) {\n            body.addClass('full-backdrop');\n          }\n        }\n      } else {\n        body.removeClass('content-loading full-backdrop');\n      }\n    },\n    handlePushStyles: function handlePushStyles() {\n      $('head [data-content-page-style=\"true\"]').remove();\n      $('#content style').attr('data-content-page-style', true).appendTo('head');\n    },\n    handleContentPageState: function handleContentPageState(resp, options) {\n      if (resp.includes('$(document).on')) {\n        Swal.fire(\"Change $(document).on to $('.content-page') or $('.page')\");\n        return false;\n      }\n\n      $('#content').html(resp);\n      var dataContent = $('#content').find('.base-content--state').first();\n\n      if (dataContent.length) {\n        var state = {\n          title: dataContent.data('title') ? dataContent.data('title') : $('title').text,\n          url: dataContent.data('url') ? dataContent.data('url') : options.url\n        };\n        \n        state.url = state.url.replace('http:', window.location.protocol);console.log(state);window.history.pushState(state, state.title, state.url);document.title = state.title; // Refresh token\n\n        var token = dataContent.data('csrf-token');\n\n        if (token) {\n          $('meta[name=\"csrf-token\"]').attr('content', token);\n        } // Reload Plugins and component\n\n\n        BaseList.init();\n        BasePlugin.init();\n        BaseUtil.refreshComponent(); // Check Notification\n\n        var lastNotify = $('.base-notification-wrapper').data('last-user-notification');\n\n        if (dataContent.data('last-user-notification') != lastNotify) {\n          BaseUtil.userNotification();\n        } // Reload ModuleApp\n\n\n        ModuleApp.init();\n\n        if ($.isFunction(options.callback)) {\n          options.callback();\n        }\n\n        $('body,html').animate({\n          scrollTop: 0\n        }, 500);\n      } else {\n        $('#content').css('opacity', 0);\n        BaseUtil.redirect(options.url.replace(location.origin, ''));\n      }\n    },\n    documentEvent: function documentEvent() {\n      $(document).on('click', '.base-content--replace', function (e) {\n        e.preventDefault();\n        BaseContent.replace(this);\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseContent;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlL0Jhc2VDb250ZW50LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUVBLElBQU1BLFdBQVcsR0FBRyxZQUFZO0VBQzVCLE9BQU87SUFDSEMsSUFBSSxFQUFFLGdCQUFZO01BQ2QsS0FBS0MsZ0JBQUw7SUFDSCxDQUhFO0lBSUhDLE9BQU8sRUFBRSxpQkFBVUMsT0FBVixFQUFpQztNQUFBOztNQUFBLElBQWRDLE9BQWMsdUVBQUosRUFBSTtNQUN0QyxJQUFJQyxFQUFFLEdBQUdDLENBQUMsQ0FBQ0gsT0FBRCxDQUFWO01BQ0EsSUFBSUksR0FBRyxlQUFHRixFQUFFLENBQUNHLElBQUgsQ0FBUSxNQUFSLENBQUgsK0NBQXNCSCxFQUFFLENBQUNJLElBQUgsQ0FBUSxLQUFSLENBQTdCO01BRUFWLFdBQVcsQ0FBQ1csWUFBWixDQUF5QkgsR0FBekIsRUFBOEJILE9BQTlCO0lBQ0gsQ0FURTtJQVVITSxZQUFZLEVBQUUsc0JBQVVILEdBQVYsRUFBNkI7TUFBQSxJQUFkSCxPQUFjLHVFQUFKLEVBQUk7TUFDdkNBLE9BQU8sQ0FBQ0csR0FBUixHQUFjQSxHQUFkO01BQ0EsSUFBSUksVUFBVSxHQUFHTCxDQUFDLENBQUMsc0JBQUQsQ0FBRCxDQUEwQkUsSUFBMUIsQ0FBK0IsU0FBL0IsQ0FBakI7O01BQ0EsSUFBSUcsVUFBVSxJQUFJTCxDQUFDLENBQUNNLFVBQUYsQ0FBYUMsTUFBTSxDQUFDQyxPQUFQLENBQWVDLFNBQTVCLENBQWxCLEVBQTBEO1FBQ3RELElBQUlDLGNBQWMsR0FBR0MsVUFBVSxDQUFDLFlBQVU7VUFDdENsQixXQUFXLENBQUNtQixNQUFaLENBQW1CLElBQW5CLEVBQXlCLEtBQXpCO1FBQ0gsQ0FGOEIsRUFFNUIsR0FGNEIsQ0FBL0I7UUFHQVosQ0FBQyxDQUFDYSxJQUFGLENBQU87VUFDSFosR0FBRyxFQUFFQSxHQURGO1VBRUhhLFFBQVEsRUFBRSxNQUZQO1VBR0hDLE9BQU8sRUFBRTtZQUFFLHdCQUF1QjtVQUF6QixDQUhOO1VBSUhDLFVBQVUsRUFBRSxzQkFBVztZQUNuQnZCLFdBQVcsQ0FBQ3dCLFNBQVo7VUFDSCxDQU5FO1VBT0hDLE9BQU8sRUFBRSxpQkFBU0MsSUFBVCxFQUFlO1lBQ3BCQyxZQUFZLENBQUNWLGNBQUQsQ0FBWjtZQUNBakIsV0FBVyxDQUFDNEIsc0JBQVosQ0FBbUNGLElBQW5DLEVBQXlDckIsT0FBekM7WUFDQUwsV0FBVyxDQUFDRSxnQkFBWjtZQUNBRixXQUFXLENBQUNtQixNQUFaLENBQW1CLEtBQW5CO1VBQ0gsQ0FaRTtVQWFIVSxLQUFLLEVBQUUsaUJBQVc7WUFDZEYsWUFBWSxDQUFDVixjQUFELENBQVo7WUFDQWpCLFdBQVcsQ0FBQ21CLE1BQVosQ0FBbUIsS0FBbkI7WUFDQVcsUUFBUSxDQUFDQyxRQUFULENBQWtCdkIsR0FBbEI7VUFDSDtRQWpCRSxDQUFQO01BbUJILENBdkJELE1Bd0JLO1FBQUE7O1FBQ0RSLFdBQVcsQ0FBQ21CLE1BQVosQ0FBbUIsSUFBbkIsRUFBeUIsS0FBekI7UUFDQUQsVUFBVSxDQUFDLFlBQVU7VUFDakJZLFFBQVEsQ0FBQ0MsUUFBVCxDQUFrQnZCLEdBQWxCO1FBQ0gsQ0FGUywyQkFFUE0sTUFBTSxDQUFDa0IsZUFGQSx5RUFFbUIsQ0FGbkIsQ0FBVjtNQUdIO0lBQ0osQ0EzQ0U7SUE0Q0hSLFNBQVMsRUFBRSxxQkFBWTtNQUNuQmpCLENBQUMsQ0FBQyx3SUFBRCxDQUFELENBQTRJMEIsTUFBNUk7SUFDSCxDQTlDRTtJQStDSGQsTUFBTSxFQUFFLGtCQUErQztNQUFBLElBQXJDZSxPQUFxQyx1RUFBM0IsSUFBMkI7TUFBQSxJQUFyQkMsWUFBcUIsdUVBQU4sSUFBTTtNQUNuRCxJQUFJQyxJQUFJLEdBQUc3QixDQUFDLENBQUMsTUFBRCxDQUFaOztNQUNBLElBQUkyQixPQUFPLEtBQUssSUFBaEIsRUFBc0I7UUFDbEIsSUFBSSxDQUFDRSxJQUFJLENBQUNDLFFBQUwsQ0FBYyxpQkFBZCxDQUFMLEVBQXVDO1VBQ25DRCxJQUFJLENBQUNFLFFBQUwsQ0FBYyxpQkFBZDs7VUFDQSxJQUFJSCxZQUFZLEtBQUssSUFBckIsRUFBMkI7WUFDdkJDLElBQUksQ0FBQ0UsUUFBTCxDQUFjLGVBQWQ7VUFDSDtRQUNKO01BQ0osQ0FQRCxNQVFLO1FBQ0RGLElBQUksQ0FBQ0csV0FBTCxDQUFpQiwrQkFBakI7TUFDSDtJQUNKLENBNURFO0lBNkRIckMsZ0JBQWdCLEVBQUUsNEJBQVk7TUFDMUJLLENBQUMsQ0FBQyx1Q0FBRCxDQUFELENBQTJDMEIsTUFBM0M7TUFDQTFCLENBQUMsQ0FBQyxnQkFBRCxDQUFELENBQW9CRSxJQUFwQixDQUF5Qix5QkFBekIsRUFBb0QsSUFBcEQsRUFBMEQrQixRQUExRCxDQUFtRSxNQUFuRTtJQUNILENBaEVFO0lBaUVIWixzQkFBc0IsRUFBRSxnQ0FBVUYsSUFBVixFQUFnQnJCLE9BQWhCLEVBQXlCO01BQzdDLElBQUlxQixJQUFJLENBQUNlLFFBQUwsQ0FBYyxnQkFBZCxDQUFKLEVBQXFDO1FBQ2pDQyxJQUFJLENBQUNDLElBQUwsQ0FBVSwyREFBVjtRQUNBLE9BQU8sS0FBUDtNQUNIOztNQUVEcEMsQ0FBQyxDQUFDLFVBQUQsQ0FBRCxDQUFjcUMsSUFBZCxDQUFtQmxCLElBQW5CO01BQ0EsSUFBSW1CLFdBQVcsR0FBR3RDLENBQUMsQ0FBQyxVQUFELENBQUQsQ0FBY3VDLElBQWQsQ0FBbUIsc0JBQW5CLEVBQTJDQyxLQUEzQyxFQUFsQjs7TUFFQSxJQUFJRixXQUFXLENBQUNHLE1BQWhCLEVBQXdCO1FBQ3BCLElBQUlDLEtBQUssR0FBRztVQUNSQyxLQUFLLEVBQUVMLFdBQVcsQ0FBQ25DLElBQVosQ0FBaUIsT0FBakIsSUFBNEJtQyxXQUFXLENBQUNuQyxJQUFaLENBQWlCLE9BQWpCLENBQTVCLEdBQXdESCxDQUFDLENBQUMsT0FBRCxDQUFELENBQVc0QyxJQURsRTtVQUVSM0MsR0FBRyxFQUFFcUMsV0FBVyxDQUFDbkMsSUFBWixDQUFpQixLQUFqQixJQUEwQm1DLFdBQVcsQ0FBQ25DLElBQVosQ0FBaUIsS0FBakIsQ0FBMUIsR0FBb0RMLE9BQU8sQ0FBQ0c7UUFGekQsQ0FBWjtRQUlBTSxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsU0FBZixDQUF5QmlDLEtBQXpCLEVBQWdDQSxLQUFLLENBQUNDLEtBQXRDLEVBQTZDRCxLQUFLLENBQUN6QyxHQUFuRDtRQUNBNEMsUUFBUSxDQUFDRixLQUFULEdBQWlCRCxLQUFLLENBQUNDLEtBQXZCLENBTm9CLENBT3BCOztRQUNBLElBQUlHLEtBQUssR0FBR1IsV0FBVyxDQUFDbkMsSUFBWixDQUFpQixZQUFqQixDQUFaOztRQUNBLElBQUkyQyxLQUFKLEVBQVc7VUFDUDlDLENBQUMsQ0FBQyx5QkFBRCxDQUFELENBQTZCRSxJQUE3QixDQUFrQyxTQUFsQyxFQUE2QzRDLEtBQTdDO1FBQ0gsQ0FYbUIsQ0FZcEI7OztRQUNBQyxRQUFRLENBQUNyRCxJQUFUO1FBQ0FzRCxVQUFVLENBQUN0RCxJQUFYO1FBQ0E2QixRQUFRLENBQUMwQixnQkFBVCxHQWZvQixDQWdCcEI7O1FBQ0EsSUFBSUMsVUFBVSxHQUFHbEQsQ0FBQyxDQUFDLDRCQUFELENBQUQsQ0FBZ0NHLElBQWhDLENBQXFDLHdCQUFyQyxDQUFqQjs7UUFDQSxJQUFJbUMsV0FBVyxDQUFDbkMsSUFBWixDQUFpQix3QkFBakIsS0FBOEMrQyxVQUFsRCxFQUE4RDtVQUMxRDNCLFFBQVEsQ0FBQzRCLGdCQUFUO1FBQ0gsQ0FwQm1CLENBcUJwQjs7O1FBQ0FDLFNBQVMsQ0FBQzFELElBQVY7O1FBRUEsSUFBSU0sQ0FBQyxDQUFDTSxVQUFGLENBQWFSLE9BQU8sQ0FBQ3VELFFBQXJCLENBQUosRUFBb0M7VUFDaEN2RCxPQUFPLENBQUN1RCxRQUFSO1FBQ0g7O1FBQ0RyRCxDQUFDLENBQUMsV0FBRCxDQUFELENBQWVzRCxPQUFmLENBQXVCO1VBQUNDLFNBQVMsRUFBRTtRQUFaLENBQXZCLEVBQXVDLEdBQXZDO01BQ0gsQ0E1QkQsTUE2Qks7UUFDRHZELENBQUMsQ0FBQyxVQUFELENBQUQsQ0FBY3dELEdBQWQsQ0FBa0IsU0FBbEIsRUFBNkIsQ0FBN0I7UUFDQWpDLFFBQVEsQ0FBQ0MsUUFBVCxDQUFrQjFCLE9BQU8sQ0FBQ0csR0FBMUI7TUFDSDtJQUNKLENBM0dFO0lBNEdId0QsYUFBYSxFQUFFLHlCQUFZO01BQ3ZCekQsQ0FBQyxDQUFDNkMsUUFBRCxDQUFELENBQVlhLEVBQVosQ0FBZSxPQUFmLEVBQXdCLHdCQUF4QixFQUFrRCxVQUFTQyxDQUFULEVBQVk7UUFDMURBLENBQUMsQ0FBQ0MsY0FBRjtRQUNBbkUsV0FBVyxDQUFDRyxPQUFaLENBQW9CLElBQXBCO01BQ0gsQ0FIRDtJQUlIO0VBakhFLENBQVA7QUFtSEgsQ0FwSG1CLEVBQXBCLEMsQ0FzSEE7OztBQUNBLElBQUksU0FBaUMsT0FBT2lFLE1BQU0sQ0FBQ0MsT0FBZCxLQUEwQixXQUEvRCxFQUE0RTtFQUN4RUQsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckUsV0FBakI7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvc3JjL2pzL2Jhc2UvQmFzZUNvbnRlbnQuanM/NzY5YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQkFTRSBDT05URU5UXG4gKi9cblxuY29uc3QgQmFzZUNvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVQdXNoU3R5bGVzKCk7XG4gICAgICAgIH0sXG4gICAgICAgIHJlcGxhY2U6IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgICAgIHZhciBlbCA9ICQoZWxlbWVudCk7XG4gICAgICAgICAgICB2YXIgdXJsID0gZWwuYXR0cignaHJlZicpID8/IGVsLmRhdGEoJ3VybCcpO1xuXG4gICAgICAgICAgICBCYXNlQ29udGVudC5yZXBsYWNlQnlVcmwodXJsLCBvcHRpb25zKTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVwbGFjZUJ5VXJsOiBmdW5jdGlvbiAodXJsLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgICAgIG9wdGlvbnMudXJsID0gdXJsO1xuICAgICAgICAgICAgdmFyIHVzZVJlcGxhY2UgPSAkKCdtZXRhW25hbWU9XCJyZXBsYWNlXCJdJykuYXR0cignY29udGVudCcpO1xuICAgICAgICAgICAgaWYgKHVzZVJlcGxhY2UgJiYgJC5pc0Z1bmN0aW9uKHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29udGVudExvYWRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IFxuICAgICAgICAgICAgICAgICAgICBCYXNlQ29udGVudC5sb2FkZXIodHJ1ZSwgZmFsc2UpOyBcbiAgICAgICAgICAgICAgICB9LCA1MDApO1xuICAgICAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogJ2h0bWwnLFxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7ICdCYXNlLVJlcGxhY2UtQ29udGVudCc6dHJ1ZSB9LFxuICAgICAgICAgICAgICAgICAgICBiZWZvcmVTZW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIEJhc2VDb250ZW50LmNsZWFyQm9keSgpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoY29udGVudExvYWRpbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgQmFzZUNvbnRlbnQuaGFuZGxlQ29udGVudFBhZ2VTdGF0ZShyZXNwLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIEJhc2VDb250ZW50LmhhbmRsZVB1c2hTdHlsZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIEJhc2VDb250ZW50LmxvYWRlcihmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChjb250ZW50TG9hZGluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBCYXNlQ29udGVudC5sb2FkZXIoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgQmFzZVV0aWwucmVkaXJlY3QodXJsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgQmFzZUNvbnRlbnQubG9hZGVyKHRydWUsIGZhbHNlKTsgXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyBcbiAgICAgICAgICAgICAgICAgICAgQmFzZVV0aWwucmVkaXJlY3QodXJsKTtcbiAgICAgICAgICAgICAgICB9LCB3aW5kb3cuUmVtb3ZlQ2FjaGVUaW1lID8/IDApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBjbGVhckJvZHk6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQoJ2JvZHk+Om5vdCgubm8tYm9keS1jbGVhciwjZ3JpdHRlci1ub3RpY2Utd3JhcHBlciwuc3dhbC1vdmVybGF5LC5waHBkZWJ1Z2JhciwucGhwZGVidWdiYXItb3BlbmhhbmRsZXIsLnBocGRlYnVnYmFyLW9wZW5oYW5kbGVyLW92ZXJsYXkpJykucmVtb3ZlKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGxvYWRlcjogZnVuY3Rpb24gKGxvYWRpbmcgPSB0cnVlLCBmdWxsYmFja2Ryb3AgPSB0cnVlKSB7XG4gICAgICAgICAgICBsZXQgYm9keSA9ICQoJ2JvZHknKTtcbiAgICAgICAgICAgIGlmIChsb2FkaW5nID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFib2R5Lmhhc0NsYXNzKCdjb250ZW50LWxvYWRpbmcnKSkge1xuICAgICAgICAgICAgICAgICAgICBib2R5LmFkZENsYXNzKCdjb250ZW50LWxvYWRpbmcnKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZ1bGxiYWNrZHJvcCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9keS5hZGRDbGFzcygnZnVsbC1iYWNrZHJvcCcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGJvZHkucmVtb3ZlQ2xhc3MoJ2NvbnRlbnQtbG9hZGluZyBmdWxsLWJhY2tkcm9wJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGhhbmRsZVB1c2hTdHlsZXM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQoJ2hlYWQgW2RhdGEtY29udGVudC1wYWdlLXN0eWxlPVwidHJ1ZVwiXScpLnJlbW92ZSgpO1xuICAgICAgICAgICAgJCgnI2NvbnRlbnQgc3R5bGUnKS5hdHRyKCdkYXRhLWNvbnRlbnQtcGFnZS1zdHlsZScsIHRydWUpLmFwcGVuZFRvKCdoZWFkJyk7XG4gICAgICAgIH0sXG4gICAgICAgIGhhbmRsZUNvbnRlbnRQYWdlU3RhdGU6IGZ1bmN0aW9uIChyZXNwLCBvcHRpb25zKSB7XG4gICAgICAgICAgICBpZiAocmVzcC5pbmNsdWRlcygnJChkb2N1bWVudCkub24nKSkge1xuICAgICAgICAgICAgICAgIFN3YWwuZmlyZShcIkNoYW5nZSAkKGRvY3VtZW50KS5vbiB0byAkKCcuY29udGVudC1wYWdlJykgb3IgJCgnLnBhZ2UnKVwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICQoJyNjb250ZW50JykuaHRtbChyZXNwKTtcbiAgICAgICAgICAgIHZhciBkYXRhQ29udGVudCA9ICQoJyNjb250ZW50JykuZmluZCgnLmJhc2UtY29udGVudC0tc3RhdGUnKS5maXJzdCgpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKGRhdGFDb250ZW50Lmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGRhdGFDb250ZW50LmRhdGEoJ3RpdGxlJykgPyBkYXRhQ29udGVudC5kYXRhKCd0aXRsZScpIDogJCgndGl0bGUnKS50ZXh0LFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGRhdGFDb250ZW50LmRhdGEoJ3VybCcpID8gZGF0YUNvbnRlbnQuZGF0YSgndXJsJykgOiBvcHRpb25zLnVybCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShzdGF0ZSwgc3RhdGUudGl0bGUsIHN0YXRlLnVybCk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBzdGF0ZS50aXRsZTtcbiAgICAgICAgICAgICAgICAvLyBSZWZyZXNoIHRva2VuXG4gICAgICAgICAgICAgICAgdmFyIHRva2VuID0gZGF0YUNvbnRlbnQuZGF0YSgnY3NyZi10b2tlbicpO1xuICAgICAgICAgICAgICAgIGlmICh0b2tlbikge1xuICAgICAgICAgICAgICAgICAgICAkKCdtZXRhW25hbWU9XCJjc3JmLXRva2VuXCJdJykuYXR0cignY29udGVudCcsIHRva2VuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gUmVsb2FkIFBsdWdpbnMgYW5kIGNvbXBvbmVudFxuICAgICAgICAgICAgICAgIEJhc2VMaXN0LmluaXQoKTtcbiAgICAgICAgICAgICAgICBCYXNlUGx1Z2luLmluaXQoKTtcbiAgICAgICAgICAgICAgICBCYXNlVXRpbC5yZWZyZXNoQ29tcG9uZW50KCk7XG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgTm90aWZpY2F0aW9uXG4gICAgICAgICAgICAgICAgdmFyIGxhc3ROb3RpZnkgPSAkKCcuYmFzZS1ub3RpZmljYXRpb24td3JhcHBlcicpLmRhdGEoJ2xhc3QtdXNlci1ub3RpZmljYXRpb24nKTtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YUNvbnRlbnQuZGF0YSgnbGFzdC11c2VyLW5vdGlmaWNhdGlvbicpICE9IGxhc3ROb3RpZnkpIHtcbiAgICAgICAgICAgICAgICAgICAgQmFzZVV0aWwudXNlck5vdGlmaWNhdGlvbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBSZWxvYWQgTW9kdWxlQXBwXG4gICAgICAgICAgICAgICAgTW9kdWxlQXBwLmluaXQoKTtcblxuICAgICAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24ob3B0aW9ucy5jYWxsYmFjaykpIHtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAkKCdib2R5LGh0bWwnKS5hbmltYXRlKHtzY3JvbGxUb3A6IDB9LCA1MDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgJCgnI2NvbnRlbnQnKS5jc3MoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAgICAgICBCYXNlVXRpbC5yZWRpcmVjdChvcHRpb25zLnVybCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGRvY3VtZW50RXZlbnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuYmFzZS1jb250ZW50LS1yZXBsYWNlJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBCYXNlQ29udGVudC5yZXBsYWNlKHRoaXMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59KCk7XG5cbi8vIHdlYnBhY2sgc3VwcG9ydFxuaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEJhc2VDb250ZW50O1xufSJdLCJuYW1lcyI6WyJCYXNlQ29udGVudCIsImluaXQiLCJoYW5kbGVQdXNoU3R5bGVzIiwicmVwbGFjZSIsImVsZW1lbnQiLCJvcHRpb25zIiwiZWwiLCIkIiwidXJsIiwiYXR0ciIsImRhdGEiLCJyZXBsYWNlQnlVcmwiLCJ1c2VSZXBsYWNlIiwiaXNGdW5jdGlvbiIsIndpbmRvdyIsImhpc3RvcnkiLCJwdXNoU3RhdGUiLCJjb250ZW50TG9hZGluZyIsInNldFRpbWVvdXQiLCJsb2FkZXIiLCJhamF4IiwiZGF0YVR5cGUiLCJoZWFkZXJzIiwiYmVmb3JlU2VuZCIsImNsZWFyQm9keSIsInN1Y2Nlc3MiLCJyZXNwIiwiY2xlYXJUaW1lb3V0IiwiaGFuZGxlQ29udGVudFBhZ2VTdGF0ZSIsImVycm9yIiwiQmFzZVV0aWwiLCJyZWRpcmVjdCIsIlJlbW92ZUNhY2hlVGltZSIsInJlbW92ZSIsImxvYWRpbmciLCJmdWxsYmFja2Ryb3AiLCJib2R5IiwiaGFzQ2xhc3MiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiYXBwZW5kVG8iLCJpbmNsdWRlcyIsIlN3YWwiLCJmaXJlIiwiaHRtbCIsImRhdGFDb250ZW50IiwiZmluZCIsImZpcnN0IiwibGVuZ3RoIiwic3RhdGUiLCJ0aXRsZSIsInRleHQiLCJkb2N1bWVudCIsInRva2VuIiwiQmFzZUxpc3QiLCJCYXNlUGx1Z2luIiwicmVmcmVzaENvbXBvbmVudCIsImxhc3ROb3RpZnkiLCJ1c2VyTm90aWZpY2F0aW9uIiwiTW9kdWxlQXBwIiwiY2FsbGJhY2siLCJhbmltYXRlIiwic2Nyb2xsVG9wIiwiY3NzIiwiZG9jdW1lbnRFdmVudCIsIm9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseContent.js\n");

  /***/ }),

  /***/ "./resources/assets/src/js/base/BaseForm.js":
  /*!**************************************************!*\
    !*** ./resources/assets/src/js/base/BaseForm.js ***!
    \**************************************************/
  /***/ ((module) => {

  eval("/*\n * BASE FORM\n */\nvar BaseForm = function () {\n  return {\n    submit: function submit(form) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var defaultOptions = {\n          btnSubmit: null,\n          btnBack: null,\n          loaderModal: true,\n          hideModal: true,\n          drawDataTable: true,\n          refreshSidebarBadge: true,\n          scrollTop: false,\n          swalSuccess: false,\n          swalError: false,\n          swalSuccessTimer: '3000',\n          swalSuccessButton: {},\n          swalErrorTimer: '',\n          swalErrorButton: 'OK',\n          redirectTo: false,\n          fullCallbackSuccess: false,\n          fullCallbackError: false,\n          callbackSuccess: function callbackSuccess(resp, form, options) {},\n          callbackError: function callbackError(resp, form, options) {}\n        },\n            options = $.extend(defaultOptions, options);\n        var formLoading = setTimeout(function () {\n          if (options.loaderModal && form.closest('.modal').length) {\n            BaseModal.loader('#' + form.closest('.modal').attr('id'), true);\n          } else {\n            BaseContent.loader(true);\n          }\n        }, 700);\n\n        if (options.btnSubmit !== null && options.btnSubmit.length) {\n          options.btnSubmit.prop('disabled', true).prepend('<i class=\"fas fa-spinner fa-spin btn-loader m-r-3\"></i> ');\n        }\n\n        form.ajaxSubmit({\n          success: function success(resp) {\n            clearTimeout(formLoading);\n\n            if (options.fullCallbackSuccess === true) {\n              if ($.isFunction(options.callbackSuccess)) {\n                options.callbackSuccess(resp, form, options);\n              }\n            } else {\n              BaseForm.validationMessages(resp, form);\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data saved successfull!',\n                image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                sticky: false,\n                time: '3000'\n              });\n              BaseForm.defaultCallbackSuccess(resp, form, options);\n            }\n          },\n          error: function error(resp) {\n            clearTimeout(formLoading);\n\n            if (options.fullCallbackError === true) {\n              if ($.isFunction(options.callbackError)) {\n                options.callbackError(resp, form, options);\n              }\n            } else {\n              resp = resp.responseJSON;\n              BaseForm.validationMessages(resp, form);\n              BaseForm.defaultCallbackError(resp, form, options);\n\n              if (resp.alert !== undefined) {\n                form.find('.base-alert').remove();\n                form.prepend(\"\\n                                <div class=\\\"alert alert-\" + resp.alert + \" fade show base-alert\\\">\\n                                    <span class=\\\"close\\\" data-dismiss=\\\"alert\\\">\\xD7</span>\\n                                    \" + resp.message + \"\\n                                </div>\\n                            \").hide().fadeIn(700);\n              }\n\n              if (options.swalError) {\n                Swal.fire({\n                  title: resp.title != undefined ? resp.title : 'Failed!',\n                  text: resp.message != undefined ? resp.message : 'Data failed to save!',\n                  icon: 'error',\n                  timer: options.swalErrorTimer,\n                  confirmButtonText: options.swalErrorButton\n                });\n              } else {\n                $.gritter.add({\n                  title: resp.title != undefined ? resp.title : 'Failed!',\n                  text: resp.message != undefined ? resp.message : 'Data failed to save!',\n                  image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                  sticky: false,\n                  time: 3000\n                });\n              }\n            }\n          }\n        });\n      }(options);\n    },\n    validationMessages: function validationMessages(resp, form) {\n      form.find('.is-invalid').removeClass('is-invalid');\n      form.find('.is-invalid-message').remove();\n      form.find('.is-invalid-alert').remove();\n\n      if (resp.message == 'The given data was invalid.') {\n        if (BaseUtil.getLang() == 'id') {\n          resp.message = 'Data yang Anda masukkan tidak valid.';\n        }\n\n        $.each(resp.errors, function (name, messages) {\n          var names = name.split('.'),\n              name = names.reduce(function (all, item) {\n            all += name == 0 ? item : '[' + item + ']';\n            return all;\n          }),\n              field = form.find('[name^=\"' + names[0] + '[]\"], [name=\"' + name + '\"], [name=\"' + name + '[]\"]'),\n              parentGroup = field.closest('.parent-group').length ? field.closest('.parent-group') : field.closest('.form-group');\n          field.addClass('is-invalid');\n          field.closest('.bootstrap-select').addClass('is-invalid');\n          $.each(messages, function (i, message) {\n            parentGroup.append('<p class=\"is-invalid-message text-danger my-1\">' + message + '</p>');\n          });\n        });\n        $('.is-invalid-message').hide().fadeIn(500);\n      } else if (BaseUtil.isDev()) {\n        if (resp.exception !== undefined && resp.file !== undefined && resp.line !== undefined && resp.message !== undefined) {\n          BaseModal.render('body', {\n            modal_id: '#alert-modal',\n            modal_size: 'modal-lg',\n            modal_bg: 'bg-light-danger',\n            callback: function callback(options, modalLoadingTimer) {\n              clearTimeout(modalLoadingTimer);\n              $(options.modal_id + ' .modal-content').html(\"\\n                                <div class=\\\"modal-header\\\">\\n                                    <h4 class=\\\"modal-title\\\">Failed!</h4>\\n                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">\\xD7</button>\\n                                </div>\\n                                <div class=\\\"modal-body py-5\\\">\\n                                    <div class=\\\"alert alert-danger\\\">\\n                                        Terjadi kesalahan!\\n                                        <p mt-5><small>*Pesan ini hanya akan ditampilkan pada masa development</small></p>\\n                                    </div>\\n                                    <div class=\\\"table-responsive\\\">\\n                                        <table class=\\\"table\\\">\\n                                            <tbody>\\n                                                <tr>\\n                                                    <td class=\\\"width-80\\\">File : </td>\\n                                                    <td>\" + resp.file + \"</td>\\n                                                </tr>\\n                                                <tr>\\n                                                    <td class=\\\"width-80\\\">Line : </td>\\n                                                    <td>\" + resp.line + \"</td>\\n                                                </tr>\\n                                                <tr>\\n                                                    <td class=\\\"width-80\\\">Message : </td>\\n                                                    <td>\" + resp.message + \"</td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"modal-footer\\\">\\n                                    <a href=\\\"javascript:;\\\" class=\\\"btn btn-white\\\" data-dismiss=\\\"modal\\\">Close</a>\\n                                </div>\\n                            \");\n\n              if (!$(options.modal_id).hasClass('show')) {\n                $(options.modal_id).modal('show');\n                BaseModal.loader(options.modal_id, false);\n              }\n            }\n          });\n        } else if ($.type(resp.errors) === \"string\") {\n          var alerParent = form.find('.modal-body').length ? form.find('.modal-body').first() : form;\n          alerParent.prepend(\"\\n                        <div class=\\\"alert alert-danger fade show is-invalid-alert\\\">\\n                            <span class=\\\"close alert-dismiss\\\" data-dismiss=\\\"alert\\\">\\xD7</span>\\n                            \" + resp.errors + \"\\n                            <br/>\\n                            <p><small>*Pesan ini hanya akan ditampilkan pada masa development</small></p>\\n                        </div>\\n                    \").hide().fadeIn(700);\n        }\n      }\n    },\n    defaultCallbackSuccess: function defaultCallbackSuccess(resp, form) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (resp.redirectToModal) {\n        BaseModal.render(options.btnSubmit, {\n          modal_id: '#modal-submit',\n          modal_size: 'modal-md',\n          modal_position: 'default',\n          modal_url: resp.redirectToModal\n        });\n        BaseContent.loader(false);\n        options.btnSubmit.prop('disabled', false).find('.btn-loader').remove();\n        return false;\n      }\n\n      if (resp.redirect) {\n        BaseContent.replaceByUrl(resp.redirect.replace(location.origin, ''));\n        return false;\n      }\n\n      if (resp.redirectTo) {\n        BaseContent.replaceByUrl(resp.redirectTo.replace(location.origin, ''));\n        return false;\n      }\n\n      if (options.btnBack !== null && $(options.btnBack).length) {\n        BaseContent.replace(options.btnBack);\n        return false;\n      }\n\n      if (options.btnSubmit !== null && options.btnSubmit.length) {\n        options.btnSubmit.prop('disabled', false).find('.btn-loader').remove();\n      }\n\n      if (options.loaderModal && form.closest('.modal').length) {\n        BaseModal.loader('#' + form.closest('.modal').attr('id'), false);\n      } else {\n        BaseContent.loader(false);\n      }\n\n      if (options.hideModal && form.closest('.modal').length) {\n        form.closest('.modal').modal('hide');\n      }\n\n      if (options.drawDataTable) {\n        BaseList.draw();\n      }\n\n      if ($.isFunction(options.callbackSuccess)) {\n        options.callbackSuccess(resp, form, options);\n      }\n\n      if (options.scrollTop) {\n        $('body,html').animate({\n          scrollTop: '5px'\n        }, 500).animate({\n          scrollTop: 0\n        }, 800);\n      }\n    },\n    defaultCallbackError: function defaultCallbackError(resp, form) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (options.btnSubmit !== null && options.btnSubmit.length) {\n        options.btnSubmit.prop('disabled', false).find('.btn-loader').remove();\n      }\n\n      if (options.loaderModal && form.closest('.modal').length) {\n        BaseModal.loader('#' + form.closest('.modal').attr('id'), false);\n      } else {\n        BaseContent.loader(false);\n      }\n\n      if ($.isFunction(options.callbackError)) {\n        options.callbackError(resp, form);\n      }\n\n      var firstError = form.find('.is-invalid').first();\n\n      if (firstError.length && form.closest('.modal').length == 0) {\n        $('body,html').animate({\n          scrollTop: firstError.position().top\n        }, 500);\n      }\n    },\n    \"delete\": function _delete(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var defaultOptions = {\n          swalSuccess: false,\n          swalError: false\n        },\n            options = $.extend(defaultOptions, options);\n        var contentLoading = setTimeout(function () {\n          BaseContent.loader(true);\n        }, 700);\n        $.ajax({\n          url: url,\n          method: 'POST',\n          data: {\n            _token: BaseUtil.getToken(),\n            _method: 'DELETE'\n          },\n          success: function success(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n\n            if (options.swalSuccess) {\n              Swal.fire({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data deleted successfully!',\n                icon: 'success',\n                timer: 3000\n              });\n            } else {\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data deleted successfully!',\n                image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                sticky: false,\n                time: '3000'\n              });\n            }\n\n            BaseList.draw();\n          },\n          error: function error(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n\n            if (options.swalError) {\n              Swal.fire({\n                title: resp.title != undefined ? resp.title : 'Failed!',\n                text: resp.message != undefined ? resp.message : 'Data failed to delete!',\n                icon: 'error' // timer: 3000,\n\n              });\n            } else {\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Failed!',\n                text: resp.message != undefined ? resp.message : 'Data failed to delete!',\n                image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                sticky: false,\n                time: '3000'\n              });\n            }\n          }\n        });\n      }(options);\n    },\n    activate: function activate(url, status) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return function (options) {\n        var defaultOptions = {\n          swalSuccess: false,\n          swalError: false\n        },\n            options = $.extend(defaultOptions, options);\n        var contentLoading = setTimeout(function () {\n          BaseContent.loader(true);\n        }, 700);\n        $.ajax({\n          url: url,\n          method: 'POST',\n          data: {\n            _token: BaseUtil.getToken(),\n            _method: 'POST',\n            status: status == 1 ? 0 : 1\n          },\n          success: function success(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n\n            if (options.swalSuccess) {\n              Swal.fire({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data has been activated successfully!',\n                icon: 'success',\n                timer: 3000\n              });\n            } else {\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data has been activated successfully!',\n                image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                sticky: false,\n                time: '3000'\n              });\n            }\n\n            BaseList.draw();\n            BaseUtil.sidebarBadge();\n          },\n          error: function error(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n\n            if (options.swalError) {\n              Swal.fire({\n                title: resp.title != undefined ? resp.title : 'Failed!',\n                text: resp.message != undefined ? resp.message : 'Data failed to activation!',\n                icon: 'error'\n              });\n            } else {\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Failed!',\n                text: resp.message != undefined ? resp.message : 'Data failed to activation!',\n                image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                sticky: false,\n                time: '3000'\n              });\n            }\n          }\n        });\n      }(options);\n    },\n    saveTempFiles: function saveTempFiles(el, event) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      return function (el, options) {\n        var _el$data, _el$data2, _el$data3, _el$data4;\n\n        var el = $(el),\n            form = el.closest('form'),\n            files = event.target.files;\n        var defaultOptions = {\n          parentClass: (_el$data = el.data('container')) !== null && _el$data !== void 0 ? _el$data : 'form-group',\n          maxFile: (_el$data2 = el.data('max-file')) !== null && _el$data2 !== void 0 ? _el$data2 : 1,\n          //1:Singgle, 2,...:Multiple\n          maxSize: (_el$data3 = el.data('max-size')) !== null && _el$data3 !== void 0 ? _el$data3 : 5024,\n          //5mb\n          type: (_el$data4 = el.data('container')) !== null && _el$data4 !== void 0 ? _el$data4 : null,\n          callbackSuccess: false,\n          callbackError: false\n        },\n            options = $.extend(defaultOptions, options);\n        var parent = el.closest('.' + options.parentClass);\n\n        if (!parent.length) {\n          parent = el.closest('.custom-file').parent();\n        }\n\n        if (parent.find('.progress-container:not(.error-uploaded)').length >= options.maxFile || files.length > options.maxFile) {\n          Swal.fire({\n            icon: 'warning',\n            title: 'Opps',\n            text: 'Maximal File ' + options.maxFile,\n            showConfirmButton: false // timer: 1500\n\n          });\n          el.val(\"\");\n          el.parent().find('.custom-file-label').text('Choose file');\n          return false;\n        }\n\n        if (files.length) {\n          var filesTooBig = [];\n          $.each(files, function (index, file) {\n            if (file && file.size && Math.round(file.size / 1024) >= options.maxSize) {\n              filesTooBig.push(file);\n            }\n          });\n\n          if (filesTooBig.length) {\n            var showSize = function showSize(bytes) {\n              if (bytes === 0) {\n                return '0 Bytes';\n              } else {\n                var k = 1024;\n                var dm = 2;\n                var sizes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n                var i = Math.floor(Math.log(bytes) / Math.log(k));\n                return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n              }\n            };\n\n            var fileNames = '<ul class=\"pl-20px text-left\">';\n            $.each(filesTooBig, function (index, file) {\n              fileNames = fileNames + '<li>' + file.name + ' (' + showSize(file.size / 1024) + ')' + ' </li>';\n            });\n            fileNames = fileNames + '</ul>';\n            Swal.fire({\n              icon: 'warning',\n              title: 'Opps',\n              html: 'Maximum File Size is ' + showSize(options.maxSize) + '<br>Please check file fize:' + fileNames,\n              confirmButtonText: 'OKE'\n            });\n\n            if (parent.find('.success-uploaded').length == 0) {\n              el.val(\"\");\n              parent.find('.custom-file-label').text('Choose file');\n            }\n          } else {\n            $.each(files, function (index, file) {\n              if (file && file.size) {\n                var fmData = new FormData();\n                var uniqueid = Math.floor(Math.random() * 26) + Date.now();\n                fmData.append('_token', BaseUtil.getToken());\n                fmData.append('file', file);\n                fmData.append('type', options.type ? options.type : null);\n                fmData.append('uniqueid', uniqueid);\n                parent.find('.custom-file-label').text(files.length + ' Files Attached');\n                $.ajax({\n                  url: BaseUtil.getUrl('ajax/saveTempFiles'),\n                  type: 'POST',\n                  data: fmData,\n                  contentType: false,\n                  processData: false,\n                  // async: false,\n                  beforeSend: function beforeSend(e) {\n                    parent.append(\"\\n                                        <div class=\\\"progress-container w-100\\\" data-uid=\\\"\" + uniqueid + \"\\\">\\n                                            <div class=\\\"progress uploading mt-2\\\">\\n                                                <div class=\\\"progress-bar bar-\" + uniqueid + \" progress-bar-striped progress-bar-animated\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"0\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 0%\\\">0%</div>\\n                                            </div>\\n                                        </div>\\n                                    \");\n                  },\n                  xhr: function xhr(resp) {\n                    var xhr = new window.XMLHttpRequest();\n                    xhr.upload.addEventListener(\"progress\", function (evt) {\n                      if (evt.lengthComputable) {\n                        var percentComplete = parseInt(evt.loaded / evt.total * 100);\n                        form.find('button[type=\"submit\"]').attr('disabled', 'disabled');\n                        form.find('.progress-bar.bar-' + uniqueid).attr('aria-valuenow', percentComplete).css('width', percentComplete + '%').text(percentComplete + '%');\n                      }\n                    }, false);\n                    return xhr;\n                  },\n                  success: function success(resp) {\n                    if ($.isFunction(options.callbackSuccess)) {\n                      options.callback(resp, el, uniqueid);\n                    }\n\n                    var icon = 'far fa-file-alt';\n\n                    if (resp.file.file_type == 'pdf') {\n                      icon = 'text-danger far fa-file-pdf';\n                    } else if (resp.file.file_type == 'xlsx') {\n                      icon = 'text-success far fa-file-excel';\n                    } else if (resp.file.file_type == 'jpg' || resp.file.file_type == 'png') {\n                      icon = 'text-warning far fa-file-image';\n                    } else if (resp.file.file_type == 'ppt') {\n                      icon = 'text-danger far fa-file-powerpoint';\n                    } else if (resp.file.file_type == 'docx') {\n                      icon = 'text-primary far fa-file-word';\n                    }\n\n                    parent.find('.uploaded').val(1);\n                    parent.find('.progress-container[data-uid=\"' + uniqueid + '\"]').prepend(\"\\n                                            <div class=\\\"alert alert-custom alert-light fade show py-2 px-4 mb-0 mt-2 success-uploaded\\\" role=\\\"alert\\\">\\n                                                <div class=\\\"alert-icon\\\">\\n                                                    <i class=\\\"\" + icon + \"\\\"></i>\\n                                                </div>\\n                                                <div class=\\\"alert-text text-left\\\">\\n                                                    <input type=\\\"hidden\\\" name=\\\"\" + el.data('name') + \"[temp_files_ids][]\\\" value=\\\"\" + resp.file.id + \"\\\">\\n                                                    <div>Upload File:</div>\\n                                                    <a href=\\\"\" + resp.file.file_url + \"\\\" target=\\\"_blank\\\" class=\\\"text-primary\\\">\" + resp.file.file_name + \"</a>\\n                                                </div>\\n                                                <div class=\\\"alert-close\\\">\\n                                                    <button type=\\\"button\\\" class=\\\"close base-form--remove-temp-files\\\" data-toggle=\\\"tooltip\\\" title=\\\"Remove\\\">\\n                                                        <span aria-hidden=\\\"true\\\">\\n                                                            <i class=\\\"ki ki-close\\\"></i>\\n                                                        </span>\\n                                                    </button>\\n                                                </div>\\n                                            </div>\\n                                        \");\n                    parent.find('.progress-container[data-uid=\"' + uniqueid + '\"] .progress').removeClass('mt-2');\n                    form.find('button[type=\"submit\"]').removeAttr('disabled');\n                    form.find('.progress-bar.bar-' + uniqueid).removeClass('progress-bar-striped').text('Done'); // var myEvent = window.attachEvent || window.addEventListener;\n                    // var chkevent = window.attachEvent ? 'onbeforeunload' : 'beforeunload';\n                    // myEvent(chkevent, function (e) { // For >=IE7, Chrome, Firefox\n                    //     var confirmationMessage = 'Are you sure to leave the page?'; // a space\n                    //     (e || window.event).returnValue = confirmationMessage;\n                    //     return confirmationMessage;\n                    // });\n\n                    parent.find('.custom-file-label').text('Add file');\n                    BasePlugin.initTooltipPopover();\n\n                    if (parent.find('.progress-container').length >= options.maxFile || files.length > options.maxFile) {\n                      el.prop('disabled', true);\n                      parent.find('.custom-file-label').text('Uploaded');\n                    }\n                  },\n                  error: function error(resp) {\n                    parent.find('.progress-container[data-uid=\"' + uniqueid + '\"]').remove();\n                    parent.append(\"\\n                                            <div class=\\\"alert alert-custom alert-light-danger fade show py-2 px-4 my-2 error-uploaded\\\" role=\\\"alert\\\">\\n                                                <div class=\\\"alert-icon\\\">\\n                                                    <i class=\\\"flaticon-warning\\\"></i>\\n                                                </div>\\n                                                <div class=\\\"alert-text text-left\\\">Error Upload File: \" + file.name + \"</div>\\n                                                <div class=\\\"alert-text text-left\\\">\\n                                                    <div>Upload File:</div>\\n                                                    <a href=\\\"javascript:;\\\" class=\\\"text-primary\\\">\" + file.name + \"</a>\\n                                                </div>\\n                                                <div class=\\\"alert-close\\\">\\n                                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                                            <span aria-hidden=\\\"true\\\">\\n                                                                <i class=\\\"ki ki-close\\\"></i>\\n                                                            </span>\\n                                                        </button>\\n                                                </div>\\n                                            </div>\\n                                        \");\n                    form.find('button[type=\"submit\"]').removeAttr('disabled');\n                    form.find('.progress-bar.bar-' + uniqueid).removeClass('progress-bar-striped').text('Error');\n\n                    if (parent.find('.success-uploaded').length == 0) {\n                      parent.find('.uploaded').val('');\n                    }\n\n                    parent.find('.custom-file-label').text('Choose file');\n                  }\n                });\n              }\n            });\n          }\n        }\n      }(el, options);\n    },\n    removeTempFiles: function removeTempFiles(el) {\n      var me = $(el),\n          container = me.closest('.progress-container'),\n          parent = container.parent();\n      me.tooltip('hide');\n      container.remove();\n      parent.find('input[type=\"file\"]').val('').prop('disabled', false);\n      parent.find('.custom-file-label').text('Choose file');\n\n      if (parent.find('.success-uploaded').length == 0) {\n        parent.find('.uploaded').val('');\n      }\n\n      BasePlugin.initTooltipPopover();\n    },\n    approveByUrl: function approveByUrl(el) {\n      var _me$attr;\n\n      var me = $(el),\n          url = (_me$attr = me.attr('href')) !== null && _me$attr !== void 0 ? _me$attr : me.data('url');\n\n      if (url) {\n        Swal.fire({\n          title: BaseApp.lang('confirm.approve.title'),\n          text: BaseApp.lang('confirm.approve.text'),\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonText: BaseApp.lang('confirm.approve.ok'),\n          cancelButtonText: BaseApp.lang('confirm.approve.cancel')\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            var contentLoading = setTimeout(function () {\n              BaseContent.loader(true);\n            }, 500);\n            $.ajax({\n              type: \"POST\",\n              url: url,\n              data: {\n                _token: BaseUtil.getToken()\n              },\n              success: function success(resp) {\n                clearTimeout(contentLoading);\n                BaseContent.loader(false);\n                $.gritter.add({\n                  title: 'Success!',\n                  text: BaseApp.lang('success.approved'),\n                  image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                  sticky: false,\n                  time: '3000'\n                });\n                BaseContent.replaceByUrl(resp.redirect.replace(location.origin, ''));\n              },\n              error: function error(resp) {\n                resp = resp.responseJSON;\n                clearTimeout(contentLoading);\n                BaseContent.loader(false);\n                $.gritter.add({\n                  title: 'Failed!',\n                  text: BaseApp.lang('error.approved'),\n                  image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                  sticky: false,\n                  time: '3000'\n                });\n              }\n            });\n          }\n        });\n      }\n    },\n    postByUrl: function postByUrl(el) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var _me$attr2, _me$data, _me$data2, _me$data3, _me$data4, _me$data5;\n\n        var me = $(el);\n        var defaultOptions = {\n          url: (_me$attr2 = me.attr('href')) !== null && _me$attr2 !== void 0 ? _me$attr2 : me.data('url'),\n          method: (_me$data = me.data('method')) !== null && _me$data !== void 0 ? _me$data : 'POST',\n          swalTitle: (_me$data2 = me.data('swal-title')) !== null && _me$data2 !== void 0 ? _me$data2 : BaseApp.lang('confirm.save.title'),\n          swalText: (_me$data3 = me.data('swal-text')) !== null && _me$data3 !== void 0 ? _me$data3 : BaseApp.lang('confirm.save.text'),\n          swalOk: (_me$data4 = me.data('swal-ok')) !== null && _me$data4 !== void 0 ? _me$data4 : BaseApp.lang('confirm.save.ok'),\n          swalCancel: (_me$data5 = me.data('swal-cancel')) !== null && _me$data5 !== void 0 ? _me$data5 : BaseApp.lang('confirm.save.cancel'),\n          data: {}\n        },\n            options = $.extend(defaultOptions, options);\n\n        if (options.url) {\n          Swal.fire({\n            title: options.swalTitle,\n            text: options.swalText,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: options.swalOk,\n            cancelButtonText: options.swalCancel\n          }).then(function (result) {\n            if (result.isConfirmed) {\n              var contentLoading = setTimeout(function () {\n                BaseContent.loader(true);\n              }, 500);\n              $.ajax({\n                type: 'POST',\n                url: options.url,\n                data: $.extend({\n                  _token: BaseUtil.getToken(),\n                  _method: options.method\n                }, options.data),\n                success: function success(resp) {\n                  var _resp$message;\n\n                  clearTimeout(contentLoading);\n                  BaseContent.loader(false);\n                  $.gritter.add({\n                    title: 'Success!',\n                    text: (_resp$message = resp.message) !== null && _resp$message !== void 0 ? _resp$message : BaseApp.lang('success.saved'),\n                    image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                    sticky: false,\n                    time: '3000'\n                  });\n                  BaseContent.replaceByUrl(resp.redirect.replace(location.origin, ''));\n                },\n                error: function error(resp) {\n                  var _resp$message2;\n\n                  resp = resp.responseJSON;\n                  clearTimeout(contentLoading);\n                  BaseContent.loader(false);\n                  $.gritter.add({\n                    title: 'Failed!',\n                    text: (_resp$message2 = resp.message) !== null && _resp$message2 !== void 0 ? _resp$message2 : BaseApp.lang('error.saved'),\n                    image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                    sticky: false,\n                    time: '3000'\n                  });\n                }\n              });\n            }\n          });\n        }\n      }(options);\n    },\n    documentEvent: function documentEvent() {\n      $(document).on('change', 'input.base-form--save-temp-files', function (e) {\n        BaseForm.saveTempFiles(this, e);\n      });\n      $(document).on('click', '.base-form--remove-temp-files', function (e) {\n        // e.preventDefault();\n        BaseForm.removeTempFiles(this);\n      });\n      $(document).on('click', '.base-form--approveByUrl', function (e) {\n        e.preventDefault();\n        BaseForm.approveByUrl(this);\n      });\n      $(document).on('click', '.base-form--postByUrl', function (e) {\n        e.preventDefault();\n        BaseForm.postByUrl(this);\n      });\n      $(document).on('click', '.base-form--submit-login', function (e) {\n        e.preventDefault();\n        var me = $(this),\n            form = me.closest('form');\n        BaseForm.submit(form, {\n          btnSubmit: me,\n          swalError: false,\n          fullCallbackSuccess: true,\n          callbackSuccess: function callbackSuccess(resp, form, options) {\n            BaseUtil.redirect('/');\n          }\n        });\n      });\n      $(document).on('click', '.base-form--submit-modal', function (e) {\n        var _me$data6, _me$data7, _me$data8, _me$data9, _me$data10;\n\n        e.preventDefault();\n        var me = $(this),\n            form = me.closest('form'),\n            swalConfirm = me.data('swal-confirm'),\n            swalTitle = (_me$data6 = me.data('swal-title')) !== null && _me$data6 !== void 0 ? _me$data6 : BaseApp.lang('confirm.save.title'),\n            swalText = (_me$data7 = me.data('swal-text')) !== null && _me$data7 !== void 0 ? _me$data7 : BaseApp.lang('confirm.save.text'),\n            swalOk = (_me$data8 = me.data('swal-ok')) !== null && _me$data8 !== void 0 ? _me$data8 : BaseApp.lang('confirm.save.ok'),\n            swalCancel = (_me$data9 = me.data('swal-cancel')) !== null && _me$data9 !== void 0 ? _me$data9 : BaseApp.lang('confirm.save.cancel');\n\n        if (form.find('[name=\"is_submit\"]').length == 0) {\n          form.append('<input type=\"hidden\" name=\"is_submit\" value=\"1\">');\n        }\n\n        form.find('[name=\"is_submit\"]').val((_me$data10 = me.data('submit')) !== null && _me$data10 !== void 0 ? _me$data10 : 1);\n\n        if (swalConfirm) {\n          Swal.fire({\n            title: swalTitle,\n            text: swalText,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: swalOk,\n            cancelButtonText: swalCancel\n          }).then(function (result) {\n            if (result.isConfirmed) {\n              BaseForm.submit(form, {\n                btnSubmit: me\n              });\n            }\n          });\n        } else {\n          BaseForm.submit(form, {\n            btnSubmit: me\n          });\n        }\n      });\n      $(document).on('click', '.base-form--submit-page', function (e) {\n        var _me$data11, _me$data12, _me$data13, _me$data14, _me$data15;\n\n        e.preventDefault();\n        var me = $(this),\n            form = me.closest('form'),\n            swalConfirm = me.data('swal-confirm'),\n            swalTitle = (_me$data11 = me.data('swal-title')) !== null && _me$data11 !== void 0 ? _me$data11 : BaseApp.lang('confirm.save.title'),\n            swalText = (_me$data12 = me.data('swal-text')) !== null && _me$data12 !== void 0 ? _me$data12 : BaseApp.lang('confirm.save.text'),\n            swalOk = (_me$data13 = me.data('swal-ok')) !== null && _me$data13 !== void 0 ? _me$data13 : BaseApp.lang('confirm.save.ok'),\n            swalCancel = (_me$data14 = me.data('swal-cancel')) !== null && _me$data14 !== void 0 ? _me$data14 : BaseApp.lang('confirm.save.cancel');\n\n        if (form.find('[name=\"is_submit\"]').length == 0) {\n          form.append('<input type=\"hidden\" name=\"is_submit\" value=\"1\">');\n        }\n\n        form.find('[name=\"is_submit\"]').val((_me$data15 = me.data('submit')) !== null && _me$data15 !== void 0 ? _me$data15 : 1);\n\n        if (swalConfirm !== false) {\n          Swal.fire({\n            title: swalTitle,\n            text: swalText,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: swalOk,\n            cancelButtonText: swalCancel\n          }).then(function (result) {\n            if (result.isConfirmed) {\n              BaseForm.submit(form, {\n                btnSubmit: me,\n                btnBack: form.find('.btn-back'),\n                loaderModal: false\n              });\n            }\n          });\n        } else {\n          BaseForm.submit(form, {\n            btnSubmit: me,\n            btnBack: form.find('.btn-back'),\n            loaderModal: false\n          });\n        }\n      });\n      $(document).on('click', '.base-modal--confirm', function (e) {\n        e.preventDefault();\n        BaseModal.confirm(this);\n      });\n      $(document).on('click', '.base-form--delete', function (e) {\n        e.preventDefault();\n        var me = $(this),\n            url = me.attr('href') ? me.attr('href') : me.data('url') ? me.data('url') : '';\n        me.closest('.modal').modal('hide');\n\n        if (url) {\n          BaseForm[\"delete\"](url);\n        }\n      });\n      $(document).on('click', '.base-form--activate', function (e) {\n        e.preventDefault();\n        var me = $(this),\n            status = $(this).data('status') == 1 ? 0 : 1,\n            text = status == 1 ? 'Are you sure you want to activate this data?' : 'Are you sure you want to inactivate this data?';\n        BaseModal.confirm(me, {\n          method: 'POST',\n          confirm_text: \"<input type=\\\"hidden\\\" name=\\\"status\\\" value=\\\"\" + status + \"\\\">\" + text\n        });\n      });\n      $(document).on('focus', 'form input, form textarea', function () {\n        var me = $(this),\n            fg = me.closest('.parent-group').length ? me.closest('.parent-group') : me.closest('.form-group');\n\n        if (fg.length) {\n          fg.find('.is-invalid').removeClass('is-invalid');\n          fg.find('.is-invalid-message').remove();\n          fg.find('.is-invalid-alert').remove();\n        }\n      });\n      $(document).on('change', 'select', function () {\n        var me = $(this),\n            fg = me.closest('.parent-group').length ? me.closest('.parent-group') : me.closest('.form-group');\n\n        if (fg.length) {\n          fg.find('.is-invalid').removeClass('is-invalid');\n          fg.find('.is-invalid-message').remove();\n          fg.find('.is-invalid-alert').remove();\n        }\n      });\n      $(document).on('change', '.custom-file input[type=\"file\"]:not(.base-form--save-temp-files)', function (e) {\n        if (e.target.files.length) {\n          $(this).next('.custom-file-label').html(e.target.files[0].name);\n        }\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseForm;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseForm.js\n");

  /***/ }),

  /***/ "./resources/assets/src/js/base/BaseList.js":
  /*!**************************************************!*\
    !*** ./resources/assets/src/js/base/BaseList.js ***!
    \**************************************************/
  /***/ ((module) => {

  eval("/**\n * ============================= BASE LIST ============================\n * return render(options), loader(modal_id, loading=true)\n */\nvar BaseList = function () {\n  \"use strict\";\n\n  return {\n    init: function init() {\n      var tables = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['#datatable_1', '#datatable_2', '#datatable_3'];\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.draw(tables, options);\n    },\n    draw: function draw() {\n      var tables = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['#datatable_1', '#datatable_2', '#datatable_3'];\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      $.each(tables, function (i, table_id) {\n        if ($(table_id).length) {\n          BaseList.render(table_id, options);\n        }\n      });\n    },\n    lang: function lang() {\n      if ($('html').attr('lang') == 'id') {\n        return {\n          \"sProcessing\": \"<div class=\\\"spinners\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-success\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\",\n          \"sLengthMenu\": \"Menampilkan _MENU_ data per halaman\",\n          \"sZeroRecords\": \"Tidak ditemukan data yang sesuai\",\n          \"sInfo\": \"Menampilkan _START_ sampai _END_ dari _TOTAL_ data\",\n          \"sInfoEmpty\": \"Menampilkan 0 sampai 0 dari 0 data\",\n          \"sInfoFiltered\": \"(difilter dari _MAX_ keseluruhan data)\",\n          \"sInfoPostFix\": \"\",\n          \"sSearch\": \"Cari:\",\n          \"sUrl\": \"\",\n          \"oPaginate\": {\n            \"sFirst\": \"Pertama\",\n            \"sPrevious\": \"Sebelumnya\",\n            \"sNext\": \"Selanjutnya\",\n            \"sLast\": \"Terakhir\"\n          }\n        };\n      } else {\n        return {\n          \"sProcessing\": \"<div class=\\\"spinners\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-success\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\",\n          \"sLengthMenu\": \"Display _MENU_ data per page\",\n          \"sZeroRecords\": \"Nothing found\",\n          \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ data\",\n          \"sInfoEmpty\": \"No data available\",\n          \"sInfoFiltered\": \"(filtered from _MAX_ total data)\",\n          \"sInfoPostFix\": \"\",\n          \"sSearch\": \"Search:\",\n          \"sUrl\": \"\",\n          \"oPaginate\": {\n            \"sFirst\": \"First\",\n            \"sPrevious\": \"Previous\",\n            \"sNext\": \"Next\",\n            \"sLast\": \"End\"\n          }\n        };\n      }\n    },\n    render: function render(table_id) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var el = $(table_id);\n        var defaultOptions = {\n          columns: [],\n          url: el.data('url'),\n          method: 'POST',\n          token: BaseUtil.getToken(),\n          callback: false,\n          tooltip: false\n        },\n            options = $.extend(defaultOptions, options);\n\n        if (el.length) {\n          if (!$.fn.DataTable.isDataTable(table_id)) {\n            $.each(el.find('thead th'), function (i) {\n              var th = $(this);\n              options.columns[i] = {\n                sName: th.data('columns-name'),\n                mData: th.data('columns-data'),\n                label: th.data('columns-label'),\n                bSortable: th.data('columns-sortable'),\n                sWidth: th.data('columns-width'),\n                sClass: th.data('columns-class-name')\n              };\n            });\n            el.DataTable({\n              lengthChange: false,\n              filter: false,\n              processing: true,\n              serverSide: true,\n              autoWidth: true,\n              sorting: [],\n              language: BaseList.lang(),\n              paging: el.data('paging') == false ? false : true,\n              info: el.data('info') == false ? false : true,\n              ajax: {\n                url: options.url,\n                method: options.method,\n                // beforeSend: function () {\n                // \tsetTimeout(function () {\n                // \t\tel.removeClass('hide');\n                // \t}, 500);\n                // },\n                data: function data(request) {\n                  request._token = options.token;\n                  $('#dataFilters input.filter-control, #dataFilters select.filter-control').each(function () {\n                    var name = $(this).data('post'),\n                        val = $(this).val();\n                    request[name] = val;\n                  });\n\n                  if (options.extraData !== undefined) {\n                    request['extraData'] = options.extraData;\n                  }\n                },\n                error: function error(responseError, status) {\n                  if (el.hasClass('first-render-has-error')) {\n                    console.log(responseError);\n                    return false;\n                  } else {\n                    el.addClass('first-render-has-error');\n                    el.DataTable().draw();\n                  }\n                }\n              },\n              columns: options.columns,\n              drawCallback: function drawCallback(resp) {\n                el.removeClass('hide');\n                this.api().column(0, {\n                  search: 'applied',\n                  order: 'applied'\n                }).nodes().each(function (cell, i, x, y) {\n                  if (parseInt(cell.innerHTML) + i + 1) {\n                    cell.innerHTML = parseInt(cell.innerHTML) + i + 1;\n                  }\n                });\n\n                if (el.data('badge') == true && el.data('tab-list') != undefined) {\n                  var tab_list = $('.tab-list[href=\"' + el.data('tab-list') + '\"]').first(),\n                      total_records = resp.json.recordsTotal;\n\n                  if (total_records && tab_list.length) {\n                    tab_list.find('.tab-badge').remove();\n                    tab_list.append(\"\\n\\t                    \\t\\t    \\t<span class=\\\"label label-success tab-badge ml-2  label-inline\\\">\" + total_records + \"</span>\\n\\t                    \\t\\t    \");\n                  }\n                }\n\n                el.find('td .btn, td .make-td-py-0').closest('td').addClass('py-0');\n\n                if ($.isFunction(options.callback)) {\n                  options.callback(options, resp);\n                }\n\n                BasePlugin.initTooltipPopover();\n              }\n            });\n\n            if (BaseUtil.isDev() === false) {\n              $.fn.dataTable.ext.errMode = 'none';\n              el.on('error.dt', function (e, settings, techNote, message) {\n                console.log('An error has been reported by DataTables: ', message);\n              }).DataTable();\n            }\n          } else {\n            el.DataTable().draw();\n          }\n        }\n      }(options);\n    },\n    handleDataFilters: function handleDataFilters() {\n      var isFiltered = false;\n      $.each($('.filter-control'), function () {\n        if ($(this).val()) {\n          isFiltered = true;\n          return false;\n        }\n      });\n\n      if (isFiltered) {\n        $('#dataFilters .label-filter').addClass('hide');\n        $('#dataFilters .reset-filter').removeClass('hide');\n      } else {\n        $('#dataFilters .reset-filter').addClass('hide');\n        $('#dataFilters .label-filter').removeClass('hide');\n      }\n    },\n    documentEvent: function documentEvent() {\n      var filterTimer;\n      $(document).on('keyup', '#dataFilters input.filter-control', function (e) {\n        clearTimeout(filterTimer);\n        filterTimer = setTimeout(function () {\n          BaseList.draw();\n        }, 500);\n        BaseList.handleDataFilters();\n      });\n      $(document).on('change', '#dataFilters select.filter-control, #dataFilters input.filter-control[class*=date]', function (e) {\n        BaseList.draw();\n        BaseList.handleDataFilters();\n      });\n      $(document).on('click', '#dataFilters .filter.button', function (e) {\n        e.preventDefault();\n        BaseList.draw();\n      });\n      $(document).on('click', '#dataFilters .reset.button', function (e) {\n        $('#dataFilters .filter-control').val('');\n        $('#dataFilters .reset-filter').addClass('hide');\n        $('#dataFilters .label-filter').removeClass('hide');\n        BasePlugin.init();\n        BaseList.draw();\n      });\n      $(document).on('click', '.tab-list', function () {\n        var me = $(this);\n        var colors = ['primary', 'info', 'success', 'warning', 'danger'];\n        $.each(colors, function (i, color) {\n          if (me.hasClass('nav-link-' + color)) {\n            me.closest('.nav-tabs').addClass('nav-tabs-' + color);\n          } else {\n            me.closest('.nav-tabs').removeClass('nav-tabs-' + color);\n          }\n        });\n      });\n      $(document).on('shown.bs.dropdown', 'table.is-datatable', function (e) {\n        // The .dropdown container\n        var me = $(e.target); // Find the actual .dropdown-menu\n\n        var dropdown = me.find('.dropdown-menu');\n\n        if (dropdown.length) {\n          // Save a reference to it, so we can find it after we've attached it to the body\n          me.data('dropdown-menu', dropdown);\n        } else {\n          dropdown = me.data('dropdown-menu');\n        }\n\n        dropdown.css('top', me.offset().top + me.outerHeight() + 'px');\n        dropdown.css('left', me.offset().left + 'px');\n        dropdown.css('position', 'absolute');\n        dropdown.css('display', 'block');\n        dropdown.appendTo('#content-page');\n      });\n      $(document).on('hide.bs.dropdown', 'table.is-datatable', function (e) {\n        // Hide the dropdown menu bound to this button\n        $(e.target).data('dropdown-menu').css('display', 'none');\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseList;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseList.js\n");

  /***/ }),

  /***/ "./resources/assets/src/js/base/BaseModal.js":
  /*!***************************************************!*\
    !*** ./resources/assets/src/js/base/BaseModal.js ***!
    \***************************************************/
  /***/ ((module) => {

  eval("/**\n * ============================= BASE MODAL ============================\n * return render(options), loader(modal_id, loading=true)\n */\nvar BaseModal = function () {\n  return {\n    render: function render(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var _el$data, _el$data2;\n\n        var el = $(element);\n        var defaultOptions = {\n          modal_id: (_el$data = el.data('modal-id')) !== null && _el$data !== void 0 ? _el$data : '#modal',\n          modal_position: (_el$data2 = el.data('modal-position')) !== null && _el$data2 !== void 0 ? _el$data2 : 'modal-dialog-centered modal-dialog-right-bottom',\n          modal_size: el.data('modal-size') ? el.data('modal-size') : 'modal-md',\n          modal_bg: el.data('modal-bg') ? el.data('modal-bg') : '',\n          modal_timer: el.data('modal-timer') ? el.data('modal-timer') : 500,\n          modal_parent: el.data('modal-parent') ? el.data('modal-parent') : '#content',\n          modal_backdrop: el.data('modal-backdrop') ? el.data('modal-backdrop') : 'static',\n          modal_keyboard: el.data('modal-keyboard') ? el.data('modal-keyboard') : false,\n          modal_ajax: el.data('modal-ajax') == false ? false : true,\n          modal_url: el.attr('href') ? el.attr('href') : el.data('modal-url') ? el.data('modal-url') : '',\n          callback: false\n        },\n            options = $.extend(defaultOptions, options);\n        $(options.modal_id).remove();\n\n        if ($(options.modal_parent).length == 0) {\n          options.modal_parent = 'body';\n        }\n\n        $(options.modal_parent).append(\"\\n\\t\\t\\t\\t<div class=\\\"modal fade modal-loading content-page\\\" \\n\\t\\t\\t\\t\\tid=\\\"\" + options.modal_id.replace('#', '') + \"\\\" \\n\\t\\t\\t\\t\\tdata-keyboard=\\\"\" + options.modal_keyboard + \"\\\" \\n\\t\\t\\t\\t\\tdata-backdrop=\\\"\" + options.modal_backdrop + \"\\\" >\\n\\t\\t\\t\\t\\t<div class=\\\"modal-dialog \" + options.modal_size + \" \" + options.modal_position + \"\\\" data-module-name=\\\"\" + ModuleApp.getName() + \"\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-content \" + options.modal_bg + \"\\\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\");\n        var modalLoadingTimer = setTimeout(function () {\n          $(options.modal_id).modal('show');\n          BaseModal.loader(options.modal_id, true);\n        }, options.modal_timer);\n\n        if (options.modal_ajax !== false && options.modal_url !== '') {\n          BaseModal.handleByAjax(options, modalLoadingTimer);\n        } else {\n          if ($.isFunction(options.callback)) {\n            options.callback(options, modalLoadingTimer);\n          }\n        }\n      }(options);\n    },\n    loader: function loader() {\n      var modal_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#modal';\n      var loading = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if ($(modal_id).length) {\n        if ($(modal_id + ' .modal-loader').length == 0) {\n          $(modal_id + ' .modal-content').append(\"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-loader pt-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"spinner spinner-primary\\\"></span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\");\n        }\n\n        if (loading) {\n          $(modal_id + ' .modal-loader').show();\n        } else {\n          $(modal_id + ' .modal-loader').hide();\n        }\n      }\n    },\n    handleByAjax: function handleByAjax(options, modalLoadingTimer) {\n      $.ajax({\n        url: options.modal_url,\n        dataType: 'html',\n        success: function success(resp) {\n          clearTimeout(modalLoadingTimer);\n\n          if (resp) {\n            $(options.modal_id + ' .modal-content').html(resp);\n          }\n\n          if (!$(options.modal_id).hasClass('show')) {\n            $(options.modal_id).modal('show');\n            BaseModal.loader(options.modal_id, false);\n          }\n\n          BasePlugin.init();\n\n          if ($.isFunction(options.callback)) {\n            options.callback(options);\n          }\n        },\n        error: function error(resp) {\n          clearTimeout(modalLoadingTimer);\n          $(options.modal_id + ' .modal-content').html(\"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-header border-0\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"modal-title\\\">Error!</h4>\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i aria-hidden=\\\"true\\\" class=\\\"ki ki-close\\\"></i></button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-body py-5\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tTerjadi kesalahan!\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\");\n\n          if (!$(options.modal_id).hasClass('show')) {\n            $(options.modal_id).modal('show');\n            BaseModal.loader(options.modal_id, false);\n          }\n        }\n      });\n    },\n    confirm: function confirm(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var el = $(element);\n        var defaultOptions = {\n          confirm_text: el.data('confirm-text') ? el.data('confirm-text') : 'Are you sure?',\n          url: el.attr('href') ? el.attr('href') : el.data('modal-url') ? el.data('modal-url') : '',\n          method: el.attr('method') ? el.attr('method') : el.data('method') ? el.data('method') : 'DELETE',\n          submit_class: el.data('submit-class') ? el.data('submit-class') : 'base-form--submit-modal',\n          modal_ajax: false,\n          modal_id: '#modal_confirm',\n          modal_size: 'modal-confirm',\n          modal_position: 'modal-dialog-centered modal-dialog-right-top',\n          callback: function callback(options, modalLoadingTimer) {\n            clearTimeout(modalLoadingTimer);\n            $('#gritter-notice-wrapper').hide();\n            $(options.modal_id + ' .modal-content').html(\"\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"modal-body py-5 pl-5\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<form action=\\\"\" + options.url + \"\\\" method=\\\"POST\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"_token\\\" value=\\\"\" + BaseUtil.getToken() + \"\\\">\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"_method\\\" value=\\\"\" + options.method + \"\\\">\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"width-full\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"valign-middle text-bold pr-5\\\">\" + options.confirm_text + \"</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"valign-middle text-right width-150px\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-icon btn-circle btn-secondary \" + options.submit_class + \"\\\" data-url=\\\"\" + options.url + \"\\\"><i class=\\\"fa fa-check p-0\\\"></i></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-icon btn-circle btn-danger\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\"><i class=\\\"ki ki-close p-0\\\"></i></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\");\n\n            if (!$(options.modal_id).hasClass('show')) {\n              $(options.modal_id).modal('show');\n              BaseModal.loader(options.modal_id, false);\n            }\n          }\n        },\n            options = $.extend(defaultOptions, options);\n        BaseModal.render(element, options);\n      }(options);\n    },\n    documentEvent: function documentEvent() {\n      $(document).on('click', '.base-modal--render', function (e) {\n        e.preventDefault();\n        BaseModal.render(this);\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseModal;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseModal.js\n");

  /***/ }),

  /***/ "./resources/assets/src/js/base/BasePlugin.js":
  /*!****************************************************!*\
    !*** ./resources/assets/src/js/base/BasePlugin.js ***!
    \****************************************************/
  /***/ ((module) => {

  eval("/**\n * ============================= BASE PLUGINS ============================\n * return render(options), loader(modal_id, loading=true)\n */\nvar BasePlugin = function () {\n  \"use strict\";\n\n  return {\n    init: function init() {\n      this.initTooltipPopover();\n      this.initSelect2();\n      this.initSelectpicker();\n      this.initDatepicker();\n      this.initTimepicker();\n      this.initSummernote();\n      this.initInputMask();\n      this.initTouchSpin();\n    },\n    initTooltipPopover: function initTooltipPopover() {\n      $('.tooltip').remove();\n\n      if ($('[data-toggle=\"tooltip\"]').length) {\n        $.each($('[data-toggle=\"tooltip\"]'), function (i, el) {\n          $(el).tooltip();\n        });\n      }\n\n      if ($('[data-toggle=\"popover\"]').length) {\n        $.each($('[data-toggle=\"popover\"]'), function (i, el) {\n          $(el).popover();\n        });\n      }\n    },\n    initSelect2: function initSelect2() {\n      $('select.select2-hidden-accessible').select2('close');\n\n      if ($('.base-plugin--select2').length) {\n        $.each($('.base-plugin--select2'), function (i, el) {\n          var _me$attr, _me$data;\n\n          var me = $(el),\n              defaultsOptions = {\n            placeholder: (_me$attr = me.attr('placeholder')) !== null && _me$attr !== void 0 ? _me$attr : me.attr('data-placeholder'),\n            dropdownParent: me.closest('form').length ? me.closest('form') : me.closest('body')\n          },\n              options = (_me$data = me.data('options')) !== null && _me$data !== void 0 ? _me$data : {};\n          options = $.extend(defaultsOptions, options);\n          me.select2(options);\n        });\n      }\n\n      if ($('.base-plugin--select2-ajax').length) {\n        $.each($('.base-plugin--select2-ajax'), function (i, el) {\n          var _me$data2, _me$data3, _me$data4, _me$attr2, _me$data5;\n\n          var me = $(el),\n              defaultsOptions = {\n            url: me.data('url'),\n            method: (_me$data2 = me.data('method')) !== null && _me$data2 !== void 0 ? _me$data2 : 'POST',\n            delay: (_me$data3 = me.data('delay')) !== null && _me$data3 !== void 0 ? _me$data3 : 500,\n            cache: (_me$data4 = me.data('cache')) !== null && _me$data4 !== void 0 ? _me$data4 : true,\n            minimumInputLength: me.data('min-input-length'),\n            placeholder: (_me$attr2 = me.attr('placeholder')) !== null && _me$attr2 !== void 0 ? _me$attr2 : me.attr('data-placeholder'),\n            dropdownParent: me.closest('form').length ? me.closest('form') : me.closest('body')\n          },\n              options = (_me$data5 = me.data('options')) !== null && _me$data5 !== void 0 ? _me$data5 : {};\n          options = $.extend(defaultsOptions, options);\n\n          if (options.url) {\n            me.select2({\n              ajax: {\n                url: options.url,\n                type: options.method,\n                dataType: 'json',\n                delay: options.delay,\n                cache: options.cache,\n                data: function data(params) {\n                  return {\n                    _token: BaseUtil.getToken(),\n                    keyword: params.term,\n                    // search term\n                    page: params.page\n                  };\n                },\n                processResults: function processResults(resp, params) {\n                  var _resp$results, _resp$more;\n\n                  params.page = params.page || 1;\n                  return {\n                    results: (_resp$results = resp.results) !== null && _resp$results !== void 0 ? _resp$results : [],\n                    pagination: {\n                      more: (_resp$more = resp.more) !== null && _resp$more !== void 0 ? _resp$more : false\n                    }\n                  };\n                }\n              },\n              minimumInputLength: options.minimumInputLength,\n              placeholder: options.placeholder,\n              dropdownParent: options.dropdownParent\n            });\n          } else {\n            me.select2({\n              placeholder: options.placeholder,\n              dropdownParent: options.dropdownParent\n            });\n          }\n        });\n      }\n    },\n    initSelectpicker: function initSelectpicker() {\n      if ($('select.base-plugin--select, select.base-plugin--selectpicker').length) {\n        alert(\"Please use class base-plugin--select2\");\n      }\n    },\n    initDatepicker: function initDatepicker() {\n      var _$$attr;\n\n      $.fn.datepicker.defaults.format = \"dd/mm/yyyy\";\n      $.fn.datepicker.defaults.language = (_$$attr = $('html').attr('lang')) !== null && _$$attr !== void 0 ? _$$attr : \"en\";\n\n      if ($('.base-plugin--datepicker, .base-plugin--datepicker-1').length) {\n        $.each($('.base-plugin--datepicker, .base-plugin--datepicker-1'), function (i, el) {\n          var _me$data6, _me$data7, _me$data8, _me$data9, _me$data10, _me$data11, _me$data12;\n\n          var me = $(el),\n              defaultsOptions = {\n            autoclose: (_me$data6 = me.data('auto-close')) !== null && _me$data6 !== void 0 ? _me$data6 : true,\n            todayHighlight: (_me$data7 = me.data('today-highlight')) !== null && _me$data7 !== void 0 ? _me$data7 : true,\n            orientation: (_me$data8 = me.data('orientation')) !== null && _me$data8 !== void 0 ? _me$data8 : 'auto',\n            format: (_me$data9 = me.data('format')) !== null && _me$data9 !== void 0 ? _me$data9 : 'dd/mm/yyyy',\n            startView: (_me$data10 = me.data('start-view')) !== null && _me$data10 !== void 0 ? _me$data10 : \"days\",\n            minViewMode: (_me$data11 = me.data('min-view')) !== null && _me$data11 !== void 0 ? _me$data11 : \"days\"\n          },\n              options = (_me$data12 = me.data('options')) !== null && _me$data12 !== void 0 ? _me$data12 : {};\n          options = $.extend(defaultsOptions, options);\n          me.datepicker(options);\n        });\n      }\n\n      if ($('.base-plugin--datepicker-2').length) {\n        $.each($('.base-plugin--datepicker-2'), function (i, el) {\n          var _me$data13, _me$data14, _me$data15, _me$data16, _me$data17, _me$data18, _me$data19;\n\n          var me = $(el),\n              defaultsOptions = {\n            autoclose: (_me$data13 = me.data('auto-close')) !== null && _me$data13 !== void 0 ? _me$data13 : true,\n            todayHighlight: (_me$data14 = me.data('today-highlight')) !== null && _me$data14 !== void 0 ? _me$data14 : true,\n            orientation: (_me$data15 = me.data('orientation')) !== null && _me$data15 !== void 0 ? _me$data15 : 'auto',\n            format: (_me$data16 = me.data('format')) !== null && _me$data16 !== void 0 ? _me$data16 : 'mm/yyyy',\n            startView: (_me$data17 = me.data('start-view')) !== null && _me$data17 !== void 0 ? _me$data17 : \"months\",\n            minViewMode: (_me$data18 = me.data('min-view')) !== null && _me$data18 !== void 0 ? _me$data18 : \"months\"\n          },\n              options = (_me$data19 = me.data('options')) !== null && _me$data19 !== void 0 ? _me$data19 : {};\n          options = $.extend(defaultsOptions, options);\n          me.datepicker(options);\n        });\n      }\n\n      if ($('.base-plugin--datepicker-3').length) {\n        $.each($('.base-plugin--datepicker-3'), function (i, el) {\n          var _me$data20, _me$data21, _me$data22, _me$data23, _me$data24, _me$data25, _me$data26;\n\n          var me = $(el),\n              defaultsOptions = {\n            autoclose: (_me$data20 = me.data('auto-close')) !== null && _me$data20 !== void 0 ? _me$data20 : true,\n            todayHighlight: (_me$data21 = me.data('today-highlight')) !== null && _me$data21 !== void 0 ? _me$data21 : true,\n            orientation: (_me$data22 = me.data('orientation')) !== null && _me$data22 !== void 0 ? _me$data22 : 'auto',\n            format: (_me$data23 = me.data('format')) !== null && _me$data23 !== void 0 ? _me$data23 : 'yyyy',\n            startView: (_me$data24 = me.data('start-view')) !== null && _me$data24 !== void 0 ? _me$data24 : \"years\",\n            minViewMode: (_me$data25 = me.data('min-view')) !== null && _me$data25 !== void 0 ? _me$data25 : \"years\"\n          },\n              options = (_me$data26 = me.data('options')) !== null && _me$data26 !== void 0 ? _me$data26 : {};\n          options = $.extend(defaultsOptions, options);\n          me.datepicker(options);\n        });\n      }\n    },\n    initTimepicker: function initTimepicker() {\n      if ($('.base-plugin--timepicker').length) {\n        $.each($('.base-plugin--timepicker'), function (i, el) {\n          var _me$data27, _me$data28, _me$data29, _me$data30, _me$data31, _me$data32, _me$data33;\n\n          var me = $(el),\n              defaultsOptions = {\n            minuteStep: (_me$data27 = me.data('minute-step')) !== null && _me$data27 !== void 0 ? _me$data27 : 2,\n            defaultTime: (_me$data28 = me.data('default-time')) !== null && _me$data28 !== void 0 ? _me$data28 : '00:00',\n            showSeconds: (_me$data29 = me.data('show-seconds')) !== null && _me$data29 !== void 0 ? _me$data29 : false,\n            showMeridian: (_me$data30 = me.data('show-meridian')) !== null && _me$data30 !== void 0 ? _me$data30 : false,\n            snapToStep: (_me$data31 = me.data('snap-to-step')) !== null && _me$data31 !== void 0 ? _me$data31 : true,\n            orientation: (_me$data32 = me.data('orientation')) !== null && _me$data32 !== void 0 ? _me$data32 : 'auto'\n          },\n              options = (_me$data33 = me.data('options')) !== null && _me$data33 !== void 0 ? _me$data33 : {};\n          options = $.extend(defaultsOptions, options);\n          me.timepicker(options);\n        });\n      }\n    },\n    initSummernote: function initSummernote() {\n      if ($('.base-plugin--summernote-readonly').length) {\n        $('.base-plugin--summernote-readonly').append(\"\\n\\t\\t\\t\\t\\t<div class=\\\"note-statusbar\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"note-resizebar\\\" aria-label=\\\"Resize\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"note-icon-bar\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"note-icon-bar\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"note-icon-bar\\\"></div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\");\n      }\n\n      if ($('.base-plugin--summernote, .base-plugin--summernote-1').length) {\n        $.each($('.base-plugin--summernote, .base-plugin--summernote-1'), function (i, el) {\n          var _me$data34, _me$data35;\n\n          var me = $(el),\n              defaultsOptions = {\n            height: (_me$data34 = me.data('height')) !== null && _me$data34 !== void 0 ? _me$data34 : 500,\n            toolbar: me.data('toolbar') != undefined ? me.data('toolbar') : [['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript']],['fontname', ['fontname']],['fontsize', ['fontsize']],['fontNames', ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande', 'Tahoma', 'Times New Roman', 'Verdana']],['para', ['ul', 'ol', 'paragraph']],['table', ['table', [['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],['delete', ['deleteRow', 'deleteCol', 'deleteTable']]]]],['insert', ['link', 'picture']]],\n            callbacks: {// callback for pasting text only (no formatting)\n              // onPaste: function (e) {\n              // \tvar bufferText = ((e.originalEvent || e).clipboardData || window.clipboardData).getData('Text');\n              // \te.preventDefault();\n              // \tdocument.execCommand('insertHtml', false, bufferText);\n              // }\n            }\n          },\n              options = (_me$data35 = me.data('options')) !== null && _me$data35 !== void 0 ? _me$data35 : {};\n\n          if (options.toolbarMerge != undefined) {\n            options.toolbar = defaultsOptions.toolbar.concat(options.toolbarMerge);\n          }\n\n          options = $.extend(defaultsOptions, options);\n          me.summernote(options);\n\n          if (me.prop('disabled')) {\n            me.summernote('destroy');\n            me.summernote({\n              toolbar: false\n            });\n            me.parent().find('.note-editable').attr('contenteditable', false);\n          }\n        });\n      }\n\n      if ($('.base-plugin--summernote-2').length) {\n        $.each($('.base-plugin--summernote-2'), function (i, el) {\n          var _me$data36, _me$data37;\n\n          var me = $(el),\n              defaultsOptions = {\n            height: (_me$data36 = me.data('height')) !== null && _me$data36 !== void 0 ? _me$data36 : 300\n          },\n              options = (_me$data37 = me.data('options')) !== null && _me$data37 !== void 0 ? _me$data37 : {};\n          options = $.extend(defaultsOptions, options);\n          me.summernote(options);\n\n          if (me.prop('disabled')) {\n            me.summernote('destroy');\n            me.summernote({\n              toolbar: false\n            });\n            me.parent().find('.note-editable').attr('contenteditable', false);\n          }\n        });\n      }\n    },\n    initInputMask: function initInputMask() {\n      if ($('.base-plugin--inputmask_currency').length) {\n        $(\".base-plugin--inputmask_currency\").inputmask('currency', {\n          alias: \"numeric\",\n          prefix: \"\",\n          groupSeparator: \",\",\n          radixPoint: \".\",\n          digits: 0,\n          digitsOptional: !1,\n          allowMinus: !1\n        });\n      }\n\n      if ($('.base-plugin--inputmask_int').length) {\n        $(\".base-plugin--inputmask_int\").inputmask({\n          \"mask\": \"9\",\n          \"repeat\": 11,\n          \"greedy\": false\n        });\n      }\n\n      if ($('.base-plugin--inputmask_int_4').length) {\n        $(\".base-plugin--inputmask_int_4\").inputmask({\n          \"mask\": \"9\",\n          \"repeat\": 4,\n          \"greedy\": false\n        });\n      }\n\n      if ($('.base-plugin--inputmask_int_2').length) {\n        $(\".base-plugin--inputmask_int_2\").inputmask({\n          \"mask\": \"9\",\n          \"repeat\": 4,\n          \"greedy\": false\n        });\n      }\n\n      if ($('.base-plugin--inputmask_dec_2').length) {\n        $(\".base-plugin--inputmask_dec_2\").inputmask('decimal', {\n          \"digits\": 2,\n          \"rightAlign\": false,\n          \"repeat\": 4,\n          \"greedy\": false\n        });\n      }\n\n      if ($('.base-plugin--inputmask_phone').length) {\n        $(\".base-plugin--inputmask_phone\").inputmask({\n          \"mask\": \"9\",\n          \"repeat\": 15,\n          \"greedy\": false\n        });\n      }\n    },\n    initTouchSpin: function initTouchSpin() {\n      if ($('.base-plugin--touchspin_int').length) {\n        $('.base-plugin--touchspin_int').TouchSpin({\n          buttondown_class: 'btn btn-secondary',\n          buttonup_class: 'btn btn-secondary',\n          verticalbuttons: true,\n          verticalup: '<i class=\"ki ki-plus\"></i>',\n          verticaldown: '<i class=\"ki ki-minus\"></i>',\n          min: 0,\n          max: 9999999999,\n          step: 1,\n          decimals: 0,\n          boostat: 5,\n          maxboostedstep: 10\n        });\n      }\n\n      if ($('.base-plugin--touchspin_dec').length) {\n        $('.base-plugin--touchspin_dec').TouchSpin({\n          buttondown_class: 'btn btn-secondary',\n          buttonup_class: 'btn btn-secondary',\n          verticalbuttons: true,\n          verticalup: '<i class=\"ki ki-plus\"></i>',\n          verticaldown: '<i class=\"ki ki-minus\"></i>',\n          min: 0,\n          max: 9999999999,\n          step: 0.01,\n          decimals: 2,\n          boostat: 5,\n          maxboostedstep: 10\n        });\n      }\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BasePlugin;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BasePlugin.js\n");

  /***/ }),

  /***/ "./resources/assets/src/js/base/BaseUtil.js":
  /*!**************************************************!*\
    !*** ./resources/assets/src/js/base/BaseUtil.js ***!
    \**************************************************/
  /***/ ((module) => {

  eval("var BaseUtil = function () {\n  return {\n    init: function init() {\n      this.refreshComponent();\n      this.handleOnPopstate();\n      this.menuActivation();\n    },\n    refreshComponent: function refreshComponent() {\n      this.bodyClasses();\n      this.sidebarMini();\n      this.menuActivation();\n    },\n    isDev: function isDev() {\n      return $('meta[name=\"debug\"]').attr('content') == 1 ? true : false;\n    },\n    getUrl: function getUrl() {\n      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return decodeURIComponent($('meta[name=\"base-url\"]').attr('content') + '/' + url);\n    },\n    getToken: function getToken() {\n      return $('meta[name=\"csrf-token\"]').attr('content');\n    },\n    getLang: function getLang() {\n      return $('html').attr('lang');\n    },\n    redirect: function redirect(url) {\n      window.location = url;\n    },\n    bodyClasses: function bodyClasses() {\n      var body = $('body');\n\n      if (body.find('.subheader').length) {\n        if (!body.hasClass('subheader-enabled')) {\n          body.addClass('subheader-enabled subheader-fixed');\n        }\n      } else {\n        body.removeClass('subheader-enabled subheader-fixed');\n      }\n    },\n    initScroll: function initScroll() {\n      $('[data-scroll=\"true\"]').each(function () {\n        var el = $(this);\n        KTUtil.scrollInit(this, {\n          mobileNativeScroll: true,\n          handleWindowResize: true,\n          rememberPosition: el.data('remember-position') == 'true' ? true : false,\n          height: function height() {\n            if (KTUtil.isBreakpointDown('lg') && el.data('mobile-height')) {\n              return el.data('mobile-height');\n            } else {\n              return el.data('height');\n            }\n          }\n        });\n      });\n    },\n    menuActivation: function menuActivation() {\n      var pageName = $('#content-page').attr('data-module');\n      var menuActive = '.aside .menu-link[data-name=\"' + pageName + '\"]';\n\n      if ($(menuActive).length === 0) {\n        menuActive = '.aside .menu-link[href=\"' + window.location.pathname + '\"]';\n      }\n\n      if ($(menuActive).length) {\n        if ($('.aside .custom-menu').length) {\n          $('.aside ul, .aside li').removeClass('active');\n          $(menuActive).parents('ul, li').addClass('active');\n          $(menuActive).closest('li').find('ul').addClass('active');\n          $('.aside li:not(.active)').removeClass('expand').addClass('closed');\n          $('.aside ul:not(.active)').removeClass('expand').addClass('closed').hide();\n        } else {\n          $('.aside .menu-item').removeClass('menu-item-active');\n          $('.aside .menu-item-submenu').removeClass('menu-item-open');\n          $(menuActive).last().addClass('active');\n          $(menuActive).last().parents('.menu-item').addClass('menu-item-active');\n          $(menuActive).last().parents('.menu-item-submenu').addClass('menu-item-open');\n        }\n      }\n    },\n    sidebarMini: function sidebarMini() {\n      if ($('.aside').length) {\n        if ($('#content-page').data('sidebar-mini')) {\n          $('body').addClass('aside-minimize');\n          KTLayoutAsideToggle.getToggle().toggleOn();\n        } else {\n          $('body').removeClass('aside-minimize');\n          KTLayoutAsideToggle.getToggle().toggleOff();\n        }\n      }\n    },\n    userNotification: function userNotification() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return function (options) {\n        var wrapper = $('.base-notification-wrapper');\n\n        if (wrapper.length) {\n          var defaultOptions = {\n            url: wrapper.data('url'),\n            type: 'POST',\n            data: {\n              _token: BaseUtil.getToken()\n            }\n          },\n              options = $.extend(defaultOptions, options);\n          $.ajax({\n            url: options.url,\n            type: options.type,\n            data: options.data,\n            success: function success(resp) {\n              wrapper.html(resp);\n              wrapper.find('[data-scroll=\"true\"]').each(function () {\n                var el = $(this);\n                KTUtil.scrollInit(this, {\n                  mobileNativeScroll: true,\n                  handleWindowResize: true,\n                  rememberPosition: el.data('remember-position') == 'true' ? true : false,\n                  height: function height() {\n                    if (KTUtil.isBreakpointDown('lg') && el.data('mobile-height')) {\n                      return el.data('mobile-height');\n                    } else {\n                      return el.data('height');\n                    }\n                  }\n                });\n              });\n              var el_items = wrapper.find('.user-notification-items').first();\n\n              if (el_items.length && parseInt(el_items.data('count')) > 0) {\n                var count = parseInt(el_items.data('count'));\n                wrapper.closest('.dropdown').find('.user-notification-badge span').html(count);\n                wrapper.closest('.dropdown').find('.user-notification-header span').html(count + ' New');\n                wrapper.closest('.dropdown').find('.pulse-ring').removeClass('hide');\n                wrapper.closest('.dropdown').find('.user-notification-badge').removeClass('hide');\n                wrapper.closest('.dropdown').find('.user-notification-header').removeClass('hide');\n              } else {\n                wrapper.closest('.dropdown').find('.pulse-ring').addClass('hide');\n                wrapper.closest('.dropdown').find('.user-notification-badge').addClass('hide');\n                wrapper.closest('.dropdown').find('.user-notification-header').addClass('hide');\n              }\n            }\n          });\n        }\n      }(options);\n    },\n    handleOnPopstate: function handleOnPopstate() {\n      window.addEventListener('popstate', function (e) {\n        window.location.reload();\n      });\n    },\n    handleServerSendEvent: function handleServerSendEvent() {\n      if (typeof EventSource !== \"undefined\") {\n        // withCredentials=true: pass the cross-domain cookies to server-side\n        var source = new EventSource('/globals/sse', {\n          withCredentials: false\n        });\n        source.addEventListener('news', function (event) {\n          var data = JSON.parse(event.data);\n        }, false);\n      }\n    },\n    documentEvent: function documentEvent() {\n      // Notification\n      $(document).on('show.bs.dropdown', '.dropdown.dropdown-notification', function () {\n        BaseUtil.userNotification();\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseUtil;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseUtil.js\n");

  /***/ })

  /******/ 	});
  /************************************************************************/
  /******/ 	// The module cache
  /******/ 	var __webpack_module_cache__ = {};
  /******/
  /******/ 	// The require function
  /******/ 	function __webpack_require__(moduleId) {
  /******/ 		// Check if module is in cache
  /******/ 		var cachedModule = __webpack_module_cache__[moduleId];
  /******/ 		if (cachedModule !== undefined) {
  /******/ 			return cachedModule.exports;
  /******/ 		}
  /******/ 		// Create a new module (and put it into the cache)
  /******/ 		var module = __webpack_module_cache__[moduleId] = {
  /******/ 			// no module.id needed
  /******/ 			// no module.loaded needed
  /******/ 			exports: {}
  /******/ 		};
  /******/
  /******/ 		// Execute the module function
  /******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
  /******/
  /******/ 		// Return the exports of the module
  /******/ 		return module.exports;
  /******/ 	}
  /******/
  /************************************************************************/
  /******/
  /******/ 	// startup
  /******/ 	// Load entry module and return exports
  /******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
  /******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/src/js/base.js");
  /******/
  /******/ })()
  ;

